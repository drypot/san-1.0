
      ▧
      ▧▧
      ▧▧▧
      ▧▧▧▧
      ▧▧▧▧▧
      ▧▧▧▧▧▧
      ▧▧▧▧▧■■■■■        ■■
      ▧▧▧▧■■■■■■        ■■
      ▧▧▧▧■■■▧            ■■■■
      ▧▧▧▧■■■▧▧          ■■■■
      ▧▧▧▧■■■▧▧▧        ■■
      ▧▧▧▧■■■▧▧▧▧      ■■
      ▧▧▧▧■■■▧▧▧▧▧    ■■
      ▧▧▧▧■■■▧▧▧▧▧▧  ■■
      ▧▧▧▧■■■▧▧▧▧▧▧▧■■
      ▧▧▧▧■■■▧▧▧▧▧▧▧■■
      ▧▧▧▧■■■■■■■■▧▧■■
      ▧▧▧▧■■■■■■■■■▧■■▧    ▩          ▩        ▩    ▩
      ▧▧▧▧■■■▧▧▧▧■■▧■■▧▧▩▩        ▩  ▩  ▩  ▩  ▩▩
      ▧▧▧▧■■■▧▧▧▧■■▧■■▧▧▧▩        ▩  ▩  ▩  ▩    ▩
      ▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▩        ▩  ▩  ▩  ▩    ▩
      ▧▧▧▧■■■▧▧▧▧▧▧▧▧▧▧▧▧▩▧      ▩  ▩  ▩  ▩    ▩
      ▧▧▧▧■■■▧▧▧▧▧▧▧▧▧▧▧▧▩▧▧    ▩  ▩  ▩  ▩    ▩
      ▧▧▧▧■■■▧▧▧▧▧▧▧▧▧▧▧▧▩▧▧▧  ▩  ▩  ▩  ▩    ▩
      ▧▧▧▧■■■▧▧▧▧▧▧▧▧▧▧▧▧▩▧▧▧▧▩  ▩  ▩  ▩    ▩
      ▧▧▧▧■■■■■■■■■■■■▧▧▧▩▧▧▧▧▩  ▩  ▩▩▩▩  ▩
      ▧▧▧▧▧■■■■■■■■■■■▧▧▩▩▩▧▩▧▧▩        ▩  ▩▩▩
      ▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧
      ▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧
      ▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧
      ▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧
      ▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧
      ▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧▧





       현재까지 개발된 정보 통신 부호 처리기중 최상의 선택이 되실 겁니다.






                                                           박 규현 드림.










                               저작권에 대한 안내


    '산' 과 그에 따르는 부수적인 프로그램들을 포함하여 '산'에 관계하여  제작자가
제공해 드리는 모든 설명 문서,  기본적으로  제공해  드리는  한글자형  (임꺽정체),
알파벳 자형에 대한 저작권은 제작자가 같습니다.


                              저작권 (저) 박규현










┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃０   차례                                                                   ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛





┌─┐
│１│ 소개
└─┴───

      1) 산은 어떤 소프트웨어 인가 ............About This Software........
      2) 그 밖의 알림 사항들 ..................Acknowledgements...........
                                                 & Trademarks

┌─┐
│２│ 사용을 위한 준비
└─┴─────────

      1) 일단 실행을 ..........................Quick Start................
      2) 산 1.041 꾸러미에는 ..................Package Containings........
      3) 실행 초기 작업  ......................Start Up Operations .......
      4) 문의 사항에 대해서 ..............................................

┌─┐
│３│ 기본적인 차림의 이용
└─┴───────────

      1) 차림 사용 ............................Managing Manu System.......
      2) 문서 차림 ............................File Management............
      3) 실행 차림 ............................Excute Other Appications...
      4) 선택 차림 ............................Options....................
      5) 기타 차림 .......................................................
      6) 상태 표시 ............................Status Line................

┌─┐
│４│ 본격적인 문서 작업
└─┴───────────

      1) 산에서의 작업 방식에 대한 이해 ..................................
      2) 자리 이동 기능들 ................................................
      3) 내용 쓰기 기능들 ................................................
      4) 삽입 삭제 기능들 ................................................
      5) 영역 관리 기능들 .....................Window Management..........
      6) 블럭 관리 기능들 ................................................
      7) 검색 치환 기능들 ................................................
      8) 덩이 명령 기능들 .....................Macro Commands.............
      9) 특수 작업 기능들 ................................................

┌─┐
│５│ 그 밖에
└─┴─────

      1) 산 바탕깔개의 사용법 .................SANSETUP...................
      2) 다색 화면 출력 장치의 색 지정법 ......SETCOLOR...................
      3) 자형 목록 관리기의 사용법 ............SANFONT....................
      4) 도움말 화일의 작성법 .................SAN.HLP....................





┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃１   소개                                                                   ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

   1) 산은 어떤 소프트웨어 인가 ............About This Software

      여러 분들은 여태까지  글을  쓰시기  위해서  종이와  연필을  사용하셨을
      것입니다. 그리고 이렇게 적힌 내용을 다른  사람에게  전달하기  위해서는
      직접 하시는 경우도 있으셨을 수 있겠고,  우편을  이용해서  하셨을  수도
      있을 겁니다. 자, 그런데 지금  여러분  앞에는  컴퓨터라는  아주  새로운
      문명의 이기가  놓여  있습니다.  여러분은  그  무엇인가  목적을  가지고
      컴퓨터를 구입하셨을 것입니다. -- 꼭 글을  쓴다는  목적이  아니실  수도
      있겠습니다.  만약,  아무  목적없이  구입하신  경우라면  컴퓨터는  비싼
      장식품에 지나지 않게 될겁니다. -- 하지만 활용에 따라서  엄청난  기능을
      소화해 내는 이 비싼 도구를 단순히 한가지 일에만 사용하시는 것은 크나큰
      낭비가 되겠습니다. 그럼, 컴으로 할 수 있는  일중  요즘  한창  발전하는
      분야의 하나인 정보 통신에 대해서 말씀드려 볼까 합니다.

      산의 배포 경로상 아무레도 여러분은 정보 통신에 친숙하실 겁니다. 적어도
      몇차례의 경험은  가지고  계시리라  밑습니다.  정보  통신이란  컴퓨터와
      서로간 자료 전송수단 -- 일반적으로 공중  전화망이  되겠습니다.  --  을
      결합한 것으로써 정보의  유통이  경직되다  시피한  일반  사용자들에게는
      더없이 필요한 존재가  되었습니다.  물론,  정보  통신의  이익이  단체든
      개인이든 간에 상관없이 존재하긴 하겠지만  다양한  자료  수집이  어려운
      개인에게 그 의미는 더욱 크다 할 수 있겠습니다.

      우리가 서로 대화를 한다면 당연히 서로간 의사 소통 수단은  양쪽이  모두
      이해할 수 있고 표현할 수 있는 것이어야 합니다. 이와 마찬 가지로,  정보
      통신시에도 서로간 의사 소통을 위해서 만둘어둔 규약이 존재  합니다.  이
      규약은 꼭 정보 통신을 위한 것만은 아닙니다. 컴퓨터를 사용하면서 대하게
      되는 거의 모든 문자 언어는 이 규약에 의해서  사용되어  지는  것입니다.
      예로, 여러분이 처음 컴퓨터를 기동  하실때  나타나는  일련의  알파벳들,
      한글등은 각각에 대해서 고유의 값이 정해져 있는 것입니다. 알파벳 규약은
      'ASCII' 라고 명명하고 있습니다. 그리고 한글 규약은 국가가  공인한  'KS
      완성형, 조합형' 이 있습니다.

      컴퓨터 사용시, 정보 통신시에는  이  문자  규약  이외에도  너무나  많은
      규약들이 존재하고 있습니다. 각 규약들은 각  분야의  전문인들만이  알면
      되는 것이어서 일반 사용자들에게 두루  알릴  필요는  없겠죠.  자,  다시
      본론으로 돌아와서, 정보 통신시에는 이런 알파벳, 한글  규약을  만족하는
      정보들이 교환되고 교환된 정보는 필요에 따라 저장되기도 합니다.  정보를
      교환 할려면 그 목적에 맞는 소프트 웨어를 사용하셔야 합니다. 국내에서도
      이분야에 대해 개발된 우수한  소프트  웨어들이  있습니다.  그럼  이러한
      정보를 창출하는 소프트  웨어가  필요해  지는  것은  당연하다고  할  수
      있겠습니다. 순서를 바로 잡는다면, 정보를  만들어  내는  소프트  웨어가
      먼저일 것입니다.

      '프로그램'의 정의에 따르면  유용한  정보를  만들어  낸다는  것은  모든
      프로그램의 공통된 목적이 됩니다. '산'이 만들어 내고,  처리하는  정보는
      위에서 말씀 드렸던 알파벳 코드와 한글 코드로 이루어진 문자 화일입니다.
      앞으로 이 문자 화일을 '문서'라고 부르겠습니다. 이러한 문서의 예를 정보
      통신과  관련해서  살펴보면,  여러분들이  전자  사서함을  통해서   주고
      받으시는 글월들, 게시판에서 필요한 내용을 갈무리한 문서들, 각 동호회의
      강좌란에 올리실 목적으로 쓰신 글들등이 있겠습니다.

      종이에 글을 쓰시거나 타자기로 직접 치시는  경우,  틀린  문자가  있으면
      수정이 곤란하거나 깨끗한 마무리가 못될 겁니다. 특정 문서 양식을 공백의
      종이에 그리시려면  자를  준비하셔야  할겁니다.  그리고  똑바르게  선을
      그리시기 위해서 온 신경을 한 곳에  집중하셔야  할겁니다.  그리고  글의
      구성을 바꾸실 경우 앞 문단과  뒷  문단의  순서를  바꾸시는  것은  글을
      처음부터 다시 쓰시는 길밖에 없으실 것입니다. 컴퓨터는 특히나  이  문서
      처리기능에서 많은 발전을 보고 있습니다. 만약 인쇄를 전제로 글을 쓰시는
      분이라면 워드 프로세서를 사용하시게 될겁니다. 이에  대해서  산은  정보
      통신을 전제로한 작업에서  직접  글을  쓰시는  사용자들이  최대한  단순
      노동을  피하고  작업  능률을  높이실  수  있는  다양한  기능을  제공해
      드립니다. 이러한 문서 정보를 다루는 소프트웨어를 'Editor' 라고 합니다.
      '산'을 한마디로 말씀드리면 영문을 비롯하여 한글 처리위해  여러  기능을
      마련해둔 Editor 라고 말씀 드릴 수 있습니다.

      이미 외국에선 훌륭한 영문 문서 편집기 (Text Editor) 가  수  없이  많이
      만들어 졌고 좋은 소프트웨어는 많은 사람들의 사랑을 받아 왔습니다.

      우리의 실정에선 소프트웨어에 대한 투자가 소극적이다 못해  영양  실조에
      걸릴  쳐지에  놓여  있어서  개발되어  나오는  프로그램들의  수가  매우
      적었으며  그들도  기술상  외국   프로그램들에   많이   떨어지는   것이
      현실이었습니다.  간혹  훌륭한  소프트웨어가   발표되어   희망을   가져
      보곤했지만 왠지 그들의 광고는 몇달을 버티지  못했습니다.  요즘은  눈에
      띄는  몇  회사가  그래도  컴퓨터  소프트웨어  시장에서  우리  한국인의
      자존심의 명맥을 이어가는 것이 자랑스럽습니다.

      실제 응용 소프트웨어 시장은 이러했지만  외국  프로그램에서  위에  덮어
      치기로 억지 한글을 구현하는 기술들이 많이 개발  되었는데  요즘도  순수
      국산 프로그램이 부족하다보니 이런 덮어  치기  기술과  외국  프로그램의
      조합을 선호하시는 분이 많은 것 같습니다.

      솔직히, 지금도 많은 기술적인 문제에서  산이  외국  프로그램+덮어  치기
      한글에 뒤지는 것이 사실입니다. 하지만 제작 도구는 외제를  썼을  지언정
      재료는 순수 국산으로 만든 토박이 프로그램으로서 나름대로의 맛을 살리기
      위해서 계속해서 노력해왔습니다.

      산은 순수  조선놈이  만든  한글  문서  편집기  입니다.  어떤분  말처럼
      된장냄새 나는 프로그램이죠. 특히나  하루가  다르게  정보  통신을  통해
      엄청나게 쏟아져 들어오는 자료들을 정리하고 또한 새로운 정보를 만드시고
      제공하시는 분들을 위해서  산에선  한글  문서  편집에  필수적인  도구를
      포함해서 아주 화려한(?) 기능까지 갖추고 있습니다.

      그런데 간혹 하안글과 산을 비교를 하시는 분들이 계신데 산이 뭔가를 좀더
      확실히 이해 시켜 드릴수 있을 것 같아서 조금  말씀드립니다.  들인  공과
      기술을 떠나서 두 프로그램은 성격에서 약간의 차가 있습니다. 영문 표기를
      빌리면 하안글은 Word Processor 이고  산은  Text  Editor  입니다.  워드
      프로세서는 대부분 독자적인 코드 규약을 가지고 문서의  '인쇄'를  전제로
      하는 다양한 기능을 가지고 있습니다. 결과 적으로 정보통신용 한글 코드를
      다루는 데는 프로그램의 구조상 약간의 미흡함이 있을 수 있습니다. 텍스트
      에디터는 물론 인쇄나  다양한  문자효과,  문법체크,  한자  사전과  같은
      방대한 요소에 대해서는 약하지만 프로그래머의 재치를 보실수  있는  오물
      조물하고 속도감 넘치는 기교와 정보 통신을 위해 사용되는 한글을  비롯한
      한자, 그림문자, 기타 기호등을 완전히 처리 할수  있다는  점에서  장점을
      찾으실 수 있습니다.

      이 프로그램을 만들어 오면서 전  산이  사용자에게서  걷어  차이지  않게
      하기위해서 최대한 노력했습니다. 그 동안 많은 사용자의 의견을  수렴해서
      계속해서 기능 개선을 해오고 있고 이 둔한 머리에서 좀더  깔끔한  처리를
      위해서 뭔가를 끝까지 쥐어 짜내곤 했습니다.

      백문이 불여 일견이죠. 일단은 써보시기 바랍니다.

   3) 그 밖의 알림 사항들 ..................Acknowledgements...........
                                                 & Trademarks

      산은 Borland C 2.0 , Turbo Assembler  ,  Turbo  Debugger  를  사용해서
      만들었습니다.  산에  사용된  루틴들은   한글   라이브러리를   포함해서
      하나하나를  전부  제가  만든  것입니다.   프로그램의   제작과   실험은
      386DX-33이 장착된 IBM PC 호환 기종, MS-DOS 5.0 시스템에서 이루어 졌고,
      인쇄 실혐은 LaserJet IIIp 에서 이루어  졌습니다.  그리고  지금  보시는
      사용자 안내서는 산으로 만들어 졌습니다.


         * 등록 명칭들


         하안글은 (주) 한글과 컴퓨터의 등록 상표 입니다.
         IBM, PC 는 IBM Corporation 의 등록 상표 입니다.
         MS-DOS  는 Microsoft Corporation 의 등록 상표 입니다.
         Borland C, Turbo Assembler, Turbo Debugger
                 는 Borland International Inc. 의 등록 상표 입니다.
         386DX   는 Intel 의 등록 상표 입니다.
         '산' 은 별다른 등록을 하지 않았습니다. (?)


┌─┐
│２│ 사용을 위한 준비
└─┴─────────

   1) 일단 실행을 ..........................Quick Start................


      SANSETUP 을 실행 시킵니다.  처음  차림에서  사용하고  계신  화면  출력
      기기를 선택  합니다.  처음  환경설정을  시작하셨다면  산의  화면  출력
      드라이버인 SANVIDEO.DRV 화일이 만들어져 있지 않기 때문에  화면  출력용
      드라이버로의 등록 여부를 물어올때 '예'로 대답합니다.

      그다음 여러 산의 구성 선택 사항을 선택하실 수 있는  차림판이  나오는데
      차차  이용하기로  하고  일단  '환경저장'을  선택하십쇼.  환경   저장을
      선택하시면 환경 저장용 화일인 'SAN.CNF'가 만들어 집니다.

      '작업마침'으로 빠져 나와서 산을 기동 시키십시요.

      문제가 생겼으면  'SANVIDEO.DRV'  나  'SAN.CNF'  화일이  만들어  졌는지
      확인해 보시고 기타 화일의 존재 여부 확인후 문제가 있으면 다시  SETUP을
      실행 시켜 주십시요.



   2) 산 1.041 꾸러미에는 ..................Package Containings........

      다음은 산 1.041 판에 속해 있는 화일들에 대한 설명  입니다.  처음  설명
      드리는 부분은 실행에 있어서 꼭 필요한  화일들입니다.  만약  이부분에서
      화일이 빠진 묶음을 받으셨다면 실행에 문제가 생기실 수 있습니다.

         san.exe         산의 주요 실행 부분
         san.hlp         도움말 화일
         san.til         산 초기 그림 화면 저장 화일
         san.lin         차림 테두리 자형
         san.eng         알파벳      자형
         san.kor         한글        자형
         san.grf         그림 문자   자형
         san.han         한자        자형
         sansetup.exe    산 바탕 깔개
         setcolor.exe    다색출력기 색상지정
         sanfont.exe     자형 목록 관리기
         sanfont.lib     자형 목록
         herc640.drv     화면 출력 부화일  ( 허큘레스용 80 열)
         herc720.drv     화면 출력 부화일  ( 허큘레스용 90 열)
         vga640.drv      화면 출력 부화일  ( VGA        80 열)
         ega640.drv      화면 출력 부화일  ( EGA        80 열)
         cga640.drv      화면 출력 부화일  ( CGA        80 열)

         sanvideo.drv    실행 화면 출력 부화일    ** 이부분은
         san.cnf         산 환경 저장 부분           시작 준비 과정에서
         san.pik         옛 문서 저장 정보           만들어 지는 부분입니다.
                                                     공급 되는 압축 화일안에는
                                                     없습니다.

         append.doc      1.0 판이후 산의 확장 부분에 대한 명세
         using.doc       전체적인 내용을 적어 놓은 산의 사용자 안내서

         *.kor           추가로 제공해 드리는 자형화일.
         *.eng           알파벳 자형화일.



   3) 실행 초기 작업  ......................Start Up Operations .......


      산의 압축 화일내에 포함되어 있는  화일들은  모두  같은  디렉토리  내에
      존재해야 합니다. 그리고 산을  어느  부분에서나  실행시키실  수  있도록
      다음과 같은 내용을 AUTOEXEC.BAT 에 포함시켜 주세요. " PATH=C:\UTIL\SAN
      " 물론 산 실행화일이 C:\UTIL\SAN 이란 디렉토리에 있다는 가정을 합니다.
      그럼,산이 실행되면서 일어나는 일들을 살펴보겠읍니다.



      [1] SAN.CNF 화일을 찾게 됩니다

      이화일 내에는 산의 실행에 필요한 정보가 저장되어 있읍니다.  이  화일에
      포함되어 있는 정보는 산의 '선택' 차림이나 바탕깔개에서  '환경저장'으로
      디스크에 저장함으로서  계속  보존  가능합니다.  이때  오류가  발생하면
      다음과 같은 말이 표시되면서 산의 실행을 중지 합니다.

           " Occurred error in CONFIGURATION "

      이 말이 출력 되는 경우는 첫째로 SAN.CNF 화일이  존재하지  않을때이므로
      이경우 SANSETUP.EXE 로 SAN.CNF 화일을  생성해  주셔야  합니다.  둘째로
      오래된 산에서 사용되던 환경 저장 화일(SAN.CNF)은 사용될  수  없습니다.
      산은 화일 크기를 비교해서 산 1.0 용으로 정해진 화일크기와 다를  경우도
      같은 말을 표시합니다.



      [2] 화면 출력용 드라이버를 읽어 들입니다.

      산이  존재하는  디렉토리에서  '  SANVIDEO.DRV  '  화일을  찾아서  읽어
      들입니다. 이때 초기 셋업  과정중  드라이버  설정  과정에서  '아니오'를
      선택하셔서 'SANVIDEO.DRV' 화일이  만들어  지지  않았다면  다음과  같은
      오류를 지적하는 말이 표시 됩니다.

       " Error in reading CRT Driver."



      [3] 실행에 필요한 메모리를 할당합니다

      윈도우 버퍼,디스크 버퍼,작업 마당  ,줄  살림  버퍼,  한자  케쉬  영역,
      옛화일 리스트 저장 영역등을 할당합니다. 이때  메모리가  부족하게  되면
      다음과 같은 말이 출력 됩니다.

       " Not enough work space. "



      [4] 옛문서 정보 저장화일을 읽습니다

      디렉토리 내에 SAN.PIK 화일이 없을 때는 초기치가 지정됩니다. 5차 개정판
      이전 버젼에서 사용하시던 화일은 인식을 못합니다.

      참고로 '옛문서'에 대해서 말씀 드리면, 산은  일단  한  번  읽어  들였던
      문서에 대해서 작업이 끝나는 시점에서 즉 다른 문서를 읽어 들이는 경우나
      산의 작업을 종료 하는 경우에 읽어 들였던 문서의 이름과 블럭 설정  위치
      커서 위치등을 기억해 두게 되는데 이때 정보를 기억하고 있는  한번  작업
      했던 화일들을 옛문서 라고 합니다. 산이 기억 하고  있는  문서의  목록을
      보시려면 '문서' 차림에서 '옛 문서'를 선택 하시면 됩니다.



      [5] 자형을 읽어 드립니다

      산에서 사용되는 자형에는 5가지가 있읍니다. 알파벳 표시를  위한  자형과
      한글 표시를 위한 자형, 그래픽 문자 표시를 위한 자형,  차림의  테두리용
      자형, 그리고 한자 자형이 그것들인데 구판에서는 알파벳 자형과  차림판의
      테두리 자형은 같은 자형에 존재 했으나 1.041 부터 분리되어 제공 됩니다.
      그래서 초기 설정으로는 산의 기동시 SAN.ENG, SAN.KOR, SAN.GRF, SAN.LIN,
      SAN.HAN 이 각각에 사용됩니다. 단 '선택' 차림에서 사용자가 한글  자형과
      알파벳 자형을 변경 하셨을  때는  변경된  자형을  읽어  들입니다.  읽어
      들이는 과정에서 문제가 발생하면 다음과 같은 말이 출력 됩니다.

       "  Occurred error in reading ENGLISH FONT. "
       "  Occurred error in reading HAN-GUL FONT. "
       "  Occurred error in reading GRAPHIC CHARACTER. "
       "  Occurred error in reading SYSTEM FONT. "

      한자 자형의 경우 사용을 하실 수도 않하실 수도  있습니다.  한자  자형이
      없는 경우, 또는 지우신 경우  오류표시는  하지  않습니다.  물론  한자를
      사용하실 수 없습니다.



      [6] 명령행에서 작업 화일명의 입력이 있었는지 판별합니다

      도스 명령행 라인에서 'SAN' 뒤에 작업할 문서명을 입력  하셨을  경우  그
      문서의 읽기를 시도합니다. 문서명의  확장자가  없을  경우  환경  정보에
      지정되어 있는 확장자로 대신합니다.  다중  확장자를  사용하신  경우  전
      확장자에 대한 검색을 시도 합니다.

      문서명이 와일드 카드 문자(*,?)를 포함했을 경우나 다중 확장자에  의해서
      조건에 맞는 여러 문서가 발견  되었을  경우  문서  선택  창..Window..이
      열리고 사용자의 선택을 기다리게 됩니다.

      단 하나의 문서가 존재하면 읽어  들인후  옛화일  저장  정보를  참고해서
      정보가 확인될경우 커서 위치, 블럭 지정등을 복귀  시킵니다.  그러므로서
      사용자는 가장 최근 작업 종료시와 같은 위치에서  계속  작업을  하실  수
      있읍니다. 옛화일 정보가 존재하지 않을 경우는  1행  1열에  커서가  위치
      합니다.

      문서명을 지정해 주셨는데  그  문서가  존재  하지  않는다면  지정해주신
      문서명으로 새 작업을 시작합니다. 이때 확장자를  입력  하지  않으셨다면
      확장자는 다중 확장자 리스트중 가장 처음 발견되는 것으로 대체 합니다.

      도스 명령행 라인에서 작업  문서명을  지정하지  않으신  경우라도  '시작
      준비'를 켜놓으셨다면 최근에 작업하던 문서를 읽어  들여와  작업  준비를
      해드립니다. 문서가 어떤 이유 -- 지우셨거나 -- 로  해서  읽기에  문제가
      있으면 아무 이름도 정해지지 않는 새 문서 작업이 시작됩니다.

      다중 확장자에 대해서는 '선택' 차림 설명에 자세히 설명 드리겠습니다.



   4) 문의 사항에 대해서 ..............................................

      readme.doc 화일에 적혀있는 제작자 연락처로 연락 주시기 바랍니다.


┌─┐
│３│ 기본적인 차림의 이용
└─┴───────────

   1) 차림의 사용


      빨래줄 차림

      산은 5차 개정판부터 빨래줄  차림  ..Pull  Down  Menu..  이  구성되어져
      있습니다. 그리고 이번 1.0판에서 기능이  대폭  향상  되었으며  계속되어
      추가되는 기능의 대부분은 차림에서도 실행하실 수  있습니다.  산의  거의
      모든기능을 차림 선택으로 작업하실 수 있다고  보시면  됩니다.  실제  각
      차림의 자세한 기능에 대해서는 뒷 절에서  자세히  설명해  드리겠습니다.
      여기서는 차림판의 운용에 대해서 공통적인 부분만 말씀드립니다. 차림판은
      시작시 맨 윗줄에 보이는 부분으로 F10을 누르시거나 각 부 차림을  부르는
      단축 글쇠  --  누르게  되면  오류  처리등,  예외  경우를  제외한  어떤
      상황에서든 지정한 기능을 수행하는 글쇠로 핫키 ..Hot Key.. 라고도 함 --
      를 누르심으로써 선택을 선택을 하실 수 있게 됩니다. 단축 글쇠는  아래에
      따로 설명을 드립니다.



      차림 설명

      그리고, 안내서를 몇일에 걸쳐서 이렇게 써드려도 잘 읽지 않으시는 분들이
      계실겁니다. 그래서, 각  차림에서  선택  막대가  이동함에  따라  간단한
      설명이 밑 줄에 표시 되도록 했습니다. 이 기능은 단지 차림에만  국한되지
      않고 문자열 검색 명령에서 검색 선택 사항 ..Find Option.. 을 입력할때도
      표시되며 설명이 필요하다고 여겨지는 곳곳에 설명이 나오도록 했습니다.



      항목 선택의 여러 방법

      차림판은 제일 맨위에 가로로 표시되는 주 차림과 각 주차림의 항목들인 부
      차림으로 구성 됩니다. 각 부 차림은 필요에 따라  자신의  부  차림을  더
      가질 수 있습니다.  주  차림을  부르기  위해서는  F10  글쇠를  누르시면
      됩니다. 여기서 부터 이동을  위한  기본적인  글쇠들을  사용하셔서  선택
      막대를 이동하실 수 있읍니다. 주 차림에서는 이에 추가해서 부차림 이름의
      시작 알파벳을 누르셔도 이동합니다. 단, 이때 부차림  선택  창이  내려와
      있는 경우는 안됩니다.  이동에는  공백  글쇠도  사용  가능합니다.  공백
      글쇠는 다음 항목으로 이동하는 기능을 합니다.  이동  글쇠나  머리  글자
      글쇠로 원하시는 항목으로  이동하셨으면  [RETURN]으로  부  차림을  끌어
      내립니다. 여기서도 같은 방법으로  선택  하신후  [RETURN]을  쳐서  선택
      하십쇼.

      주 차림을 부르신후 부 차림을 다시 부르셔도 되지만 위에서  좀더  신속한
      작업을 위해서 산 1.0 부터 전 부 차림에 걸쳐서 단축 글쇠가 지원 됩니다.



      다양한 단축 글쇠의 지원

      산에서는 중심 차림 -- F10 으로 부름 -- 에서 파생되는 각 부 차림에 각각
      단축 글쇠를 부여 함으로써 처음 사용자를 위한 최소한의 배려를 했습니다.
      부 차림을 호출 하는 각 단축 글쇠는 ALT 글쇠와 산의 작업 화면 맨 윗줄에
      나와있는 부차림명의 첫 알파벳자의 조합으로 이루어 집니다. 예로, '실행'
      차림을 불러 내기 위해서는 ALT-C 를 눌러 주시면 됩니다.

      그리고 각 부차림의 기능들을 살펴  보시면  차림  내용의  앞에  하나씩의
      알파벳이 적혀 있습니다. 물론 반전 막대를 이동해서 -- 화살표 키나  공백
      글쇠를 이용 -- 원하시는 항목을 선택 하실 수 있지만  좀더  빠른  작업을
      위해서는 누르는 글쇠 수를 줄여야 하기 때문에  자주  쓰는  기능에  대한
      호출 알파벳의 기억이 필요하실 겁니다. 예로 '블럭' 차림중 '밀고 당김'을
      선택  하기  위해서는   [F10]-[블럭으로   이동]-[리턴]-[밀고   당김으로
      이동]-[리턴] 의 과정을 거칠  수  있지만  간단히  [Alt-B]-[i]로도  같은
      기능을 수행 하실 수 있습니다.



      차림기능의 연속성

      특히 블럭 처리나 삽입 삭제  처리에  있어서  중복된  작업을  위해  기능
      글쇠를 여러번 눌러  주셔야  하지만  차림을  이용해서  작업  하실때에는
      지정한 기능이 ESC로 중지 시키기 전까지  계속  유효  하므로  커서  이동
      글쇠와 리턴 글쇠 만을 가지고 중복 작업을 하실 수 있습니다.

      예를 든다면 과거 판에서는 블럭을 오늘쪽으로 밀거나  왼쪽으로  당기거나
      할때 반복된 작업에 있어서 'CTRL-KI'나 'CTRL-KU'를 여러번  눌러  주셔야
      했지만 현재 제공되는 산에서는 '블럭  차림'에서  '밀고  당기기'를  지정
      하시면 화살표 글쇠로 좌우로  간편히  블럭  이동이  가능  합니다.  또한
      지우실 줄또는 단어가 많이 있을때 커서 이동후 매번 콘트롤 글쇠와 기능에
      따른 다른 하나의 글쇠를 더 눌러 주어야 했기 때문에  오타와  효율저하가
      발생 했지만 차림에서 원하시는 항목을 선택해서 작업 하시는 경우는  커서
      이동과 리턴 글쇠 하나로 명령을 내릴수 있기 때문에 훨씬 편해  졌습니다.


        ┌ 사용되는 기본적인 글쇠 ───────────── 참고 ─┐
        │                                                          │
        │      산에서는 몇가지 기본적인 사항에  대한  글쇠가  통일 │
        │  되어 있읍니다. 여기서 설명드리는 글쇠들은  차림  내에서 │
        │  항목 사이의  이동,  화일  선택,  문장  입력시에  공통된 │
        │  것으로 알고 계시면 편리하게 사용하실 수 있읍니다.       │
        │                                                          │
        ├────────────┬────────────────┤
        │    RIGHT ARROW,CTRL-D  │ 오른쪽으로 이동합니다.         │
        │    LEFT  ARROW,CTRL-S  │ 왼쪽으로   이동합니다.         │
        │    UP    ARROW,CTRL-E  │ 위로       이동합니다.         │
        │    DOWN  ARROW,CTRL-X  │ 밑으로     이동합니다.         │
        ├─────────────────────────────┤
        │    PgUp       ,CTRL-R  │ 한 블럭을 성큼 이동합니다.     │
        │                        │ 위로.                          │
        │    PgDn       ,CTRL-C  │ 한 블럭을 성큼 이동합니다.     │
        │                        │ 밑으로.                        │
        ├─────────────────────────────┤
        │    HOME                │ 처음으로 갑니다.               │
        │    END                 │ 끝으로 갑니다.                 │
        ├─────────────────────────────┤
        │    SPACE               │ 다음 항목으로 이동합니다.      │
        ├─────────────────────────────┤
        │    ESC                 │ 탈출합니다.                    │
        └────────────┴────────────────┘



        ┌ 단축 글쇠──────────────────── 참고 ─┐
        │                                                          │
        │      단축 글쇠는 산이 실행된 후 딱 2가지 상황을  제외한  │
        │  모든 경우,누르자 마자 사용자가 원하시는 작업을 하실 수  │
        │  있는 편리한 기능입니다. 이  예외  상황은  첫째로, 산을  │
        │  실행시킨 후  '도스 이용'을  선택  하셔서  DOS  SHELL을  │
        │  사용중이신 경우와  둘째로  DOS CRITICAL 오류 발생 시로  │
        │  이는 디스켓의 라이트 프로텍터가 붙여진 상태에서 쓰기를  │
        │  시도한 경우나 프린터 오류등에 대한  도스의  반응이라고  │
        │  보시면 됩니다. 산 에서 사용되는 단축 글쇠는             │
        │                                                          │
        │           F3   문서 읽기                                 │
        │           F2   문서 저장                                 │
        │       Alt-W    딴이름으로 저장                           │
        │       Alt-F3   옛 문서 선택                              │
        │           F10  주 차림 호출                              │
        │                                                          │
        │      그리고  주  차림에  보이는  부  차림의  이름  앞에  │
        │  붙어있는 알파벳과  ALT  글쇠와의 조합이 모두 단축 글쇠  │
        │  입니다. 여담  입니다만,  단축 글쇠의 지원은 사용자에게  │
        │  있어서는 매우 큰  편리함이지만  프로그래머에  있어서는  │
        │  머리카락 빠지는 작업 입니다.                            │
        │                                                          │
        └─────────────────────────────┘




   2) 문서 차림 ............................File Management............


      문서 관리는 문서의 읽기 쓰기등 도스와  산을  연결해주는  곳입니다.  이
      항목은 차림중 가장 많이 쓰일것으로 예상 되는 부분이어서 여러 개의 단축
      글쇠가 배정되어 있읍니다.



      문서 읽기

      사용자가 원하시는 문서를 읽어 들입니다. 이 항목을 선택하시면 산이 입력
      상자를 열게 됩니다. 초기 값은 *.<지정하신 문서꼬리> 이고 다중 확장자도
      모두 표시 됩니다. 이 내용을 변경 하실 경우, 다음 문서 읽기  선택시  전
      내용이  그대로  보존된  상태에  있읍니다.   문서명에선   와일드   카드
      문자사용이 가능하고 물론 디렉토리 지정을 포함하셔도  됩니다.  문서명을
      일단 지정해 주시면, 필요할 경우 문서 선택 박스가 옆에 길쭉하게  열리게
      됩니다. 문서명과 함께 대략 적인 문서의 크기도 표시되는데 이때 기본적인
      이동 글쇠를 사용해서 원하시는 문서를 설정해 주십쇼. 만약  읽기  선택이
      끝난  상태에서  현재  작업영역의  문서가  저장  안된  경우라면  저장할
      것인가를 물어  오게  됩니다.  여기서  예/아니오로  답해주십쇼.  읽기가
      끝나면 옛화일 명부에 읽어들인 화일을 올리게 됩니다. 만약 '선택' 차림중
      사용 한글 코드를  완성형으로  하신  경우  산의  자체  처리는  조합형을
      기준으로 만들어 졌기 때문에 '코드 변환' 을  알리는  말이  잠시  나오게
      됩니다.

      문서를 읽어 들일때나 블럭을 읽어  들일때는  사용자가  원하는  문서명을
      입력해 주셔야 합니다. 이때  원하는  이름이  잘  생각나지  않으실  때를
      위해서 와일드 카드 문자 -- "*" 나 "?" -- 라는  것의  사용이  가능한데,
      이에 덧붙여서 여러개의 특수한 확장자 중에서의 검색이 가능합니다.  일단
      원하시는 문서명을 기입하신후 뒤에 여러개의 확장자를 나열하되 각 확장자
      사이는 ';' 문자로 구분 하셔야 합니다.

      예로 TEST.ASM;OBJ;EXE;COM 을 입력 하셨다면  TEST란  이름을  같고  있는
      화일중 확장자가  ASM,OBJ,EXE,COM인것이  있다면  모두  선택  상자  안에
      나타날 겁니다. 매번 이렇게 적으시는 것이 불편하실 경우  '선택'  차림의
      '문서 꼬리' 지정에서 사용하실 다중 확장자를  ';'  문자로  구분해서  쭉
      나열해 주시면 편리하게 사용 하실 수 있습니다.

      그리고 문서 선택 상자내에서 선택 문서 리스트중에  현재  작업하고  있던
      문서명이 나타나면 현재  작업  문서  이름  다음으로  선택  막대가  자동
      이동됩니다. 이 기능의 사용을 예로 들어 들이면, mail 이라는  디렉토리에
      mail001.cap 부터 mail002,mail003 .... mail020.cap 까지의 화일이 있다고
      가정하고, mail001.cap 의 정리 작업이 끝나면 mail002.cap 의 정리 작업이
      이루어질 일이  많을  것입니다.  이런경우  문서  선택  막대는  자동으로
      mail001.cap 의 다음 항목인 mail002.cap 로 이동해 있습니다.  이는  산의
      문서 선택 상자에  표시되는  문서명이  알파벳  순으로  정리되기  때문에
      가능합니다.



            ┌──산의 문장 입력 요구 ─────────참고──┐
            │                                                  │
            │    산을 이용하실때 종종 산이 문장 입력을 요구하는│
            │경우가 있읍니다. 예로 문서명  입력이라든지  문자열│
            │치환/검색시. 이때 사용 가능하신 글쇠 들입니다.    │
            │                                                  │
            │  HOME              │ 처음으로                   │
            │  END               │ 끝으로                     │
            │  LEFT  ARROW,CTRL-S│ 왼쪽으로   한문자 만큼     │
            │  RIGHT ARROW,CTRL-D│ 오른쪽으로 한문자 만큼     │
            │  CTRL  LEFT ,CTRL-A│ 왼쪽으로   한단어 만큼     │
            │  CTRL  RIGHT,CTRL-F│ 오른쪽으로 한단어 만큼     │
            │  RETURN            │ 입력 수락하고 끝냄         │
            │  ESC               │ 입력 취소하고 끝냄         │
            │  BACKSPACE         │ 커서 앞문자 지움           │
            │  DEL        ,CTRL-G│ 커서 위치 문자 지움        │
            │  CTRL-T            │ 단어 단위로 지움           │
            │  CTRL-Y            │ 입력 문자열 전체 지우고    │
            │                    │ 첫칸으로                   │
            └─────────────────────────┘



      옛 문서

      여태까지 작성하고 수정한 문서들의 명부를  보고  원하시는  문서를  선택
      하실수 있읍니다. 맨 윗줄은 가장 최근에 읽어들인 문서를 표시하고  2번째
      줄부터 밑으로 갈수록 작업한지 오래된 문서들이 표시 됩니다. 선택과 함께
      읽기가 끝나면 블럭 지정과 지난 작업시의 커서 위치가 복귀 됩니다.  만약
      읽어들이려는 문서가 없을경우  옛이름  그대로  새로운  작업을  시작하게
      됩니다. 옛문서의 이름을 명부에서 지우시려면 원하는  이름위에서  CTRL-Y
      를 눌러 주십쇼.



      문서 저장

      문서를 디스크에  저장합니다.  현재  문서명이  결정되지  않은  상태라면
      입력상자가 나와서 사용자의 입력을  기다립니다.  이  항목으로  저장할수
      있는 문서는 현재 작업 마당의 문서  뿐입니다.  다른  작업  마당의  문서
      저장을 위해서는 직접 이동해 가셔서 문서 저장을 실행시키시는 것과  모두
      저장을 실행 시키시는 방법이 있습니다. 문서  저장시  동일  명의  문서가
      디스크에 존재  한다면  '문서  보험'이  켜져  있는  경우,  이  문서명의
      확장자는 BAK 로 바뀌고나거  현재  작업중인  문서가  저장됩니다.  '문서
      보험'이 꺼져 있다면 동일 이름의 문서 존재여부를 확인하지  않고  저장해
      버립니다. 단, '문서 보험'이 켜져 있는 상황에서라도  현재  작업  문서의
      확장자가 BAK 라면 하는 수 없이 과거 문서는 읽으시게 됩니다.



      모두 저장

      위의 문서 저장이 현재 작업 마당의 문서만 저장하는데 비해 '모두 저장'은
      모든 작업 마당에 존재하는 문서중 수정이 가해진 -- 저장  필요성이  있는
      -- 전 문서를 대상으로 합니다. 문서 수정 여부는  상태  표시  행의  작업
      문서명 앞의 '*' 표시로 구분 하실 수 있습니다.



      새 문서

      현재 작업하던 작업영역을 깨끗이 지우고 새  작업  시작  준비를  합니다.
      이때 필요하다면 작업중이던 문서의 저장 여부를 묻게 됩니다.



      새 이름

      한번 문서명이 결정되면 문서 저장 기능을 가지고는 다른 이름으로  문서를
      디스크에 써놓을 수가 없습니다.  새  이름  저장은  현재  지정되어  있는
      문서명을 무시하고 새로운 이름을 입력받아서 저장하는 기능 입니다.  이때
      문서 저장이 끝난 후 원래의 문서은 새로 지정하신 문서명으로 바뀌어 지나
      옛 문서 명부에 등록되어 있는 문서명에는 변경이 없습니다.



      화일 목록

      디스크에 저장된 화일들의 목록을 봅니다.



      경로 변경

      현재 작업 디렉토리위치를 변경합니다.



      문서 인쇄


      문서를 출력합니다. 프린터 기종은  상용  조합형  한글이나  완성형  한글
      코드를 인식하고 한글 출력이 가능한 프린터인 경우 -- 한글 모듈을 장착한
      프린터 -- 어떤 기종이든 관계없이 출력이 가능하고, 그렇지 않은 경우라도
      EPSON 프린터와 LaserJet 호환  프린터인  경우  그래픽  방식으로  인쇄가
      가능합니다. 인쇄 상태는 아래 상태 행에 표시되고 ESC 글쇠로  취소  하실
      수 있습니다.



      도스 이용

      도스 기능을 잠시 사용합니다. '실행' 차림의 '일단 저장' 기능이 '켬'으로
      되어 있을 때는 도스로 나가기 전에 현재  작업중이던  화일의  저장여부를
      묻습니다. 만약 메모리가 부족할경우 실행이 곤란합니다. 산은 초기 버젼에
      비해서 1.041 판은 약 3배 이상 커져 버렸습니다. 맨 처음  발표  당시에는
      그 크기가 약 50 킬로 바이트  였지만  현재는  160  킬로  바이트를  넘어
      섰습니다. 그리고 실행 화일 코드의 증가와 비슷하게 운영에  필요한  자료
      저장 메모리도 많이 잡아 먹게 되었습니다. 현재는 너무 큰 문서의  작업도
      곤란하며 왠만한 문서 작업시 '실행' 기능이나 '도스 이용' 기능의  사용에
      문제가 있습니다.



      작업 종료

      산의 모든 작업을 종료하고 도스로 돌아갑니다. 나가기 전에 저장되지 않은
      문서가  있다면  산이  저장  하기를  권합니다.  그리고  옛문서   정보를
      SAN.PIK이란  이름으로  자동  저장합니다.  단,  '실행'  차림에   정의된
      내용이나 '선택' 차림에서 설정할 수 있는 기능들과 덩이 명령 상태,  상태
      표시 행에 표시되는 정보들은 자동적으로 저장되지 않으므로 '선택' 차림의
      '환경 저장'을 실행 하셔야 정보가 저장 됨을 주의 해 주십쇼.




   3) 실행 차림 ............................Excute Other Appications...


      '실행' 차림은 독특한  부분으로  사용자  정의  차림이라고  말씀드릴  수
      있습니다.  다음에  직접  하나의  차림  항목을   만드는   과정을   보여
      드리겠습니다.

      Alt-C 로 '실행' 차림을 열어 보시면 아시겠지만 처음 항목에 F5  가  단축
      글쇠로 지정되어 있습니다. 이제 F5를 누르므로써  현재  디렉토리의  모든
      화일명을 보여주는 명령을 정의 할까 합니다. 위와 같은  기능을  수행하기
      위해서는 도스 명령행 상에서 "dir *.*"와 같이 입력  해야  할겁니다.  이
      문자열을 그대로 산에 입력 시켜 주면되는데 일단 Alt-C 로 '실행'  차림을
      여시고 '실행'차림의 맨 윗줄로 이동하신 다음 'E'  글쇠를  누르세요.  --
      'E' 는 Edit 의 앞글자 입니다. -- 산이 주제 입력을 원할 겁니다.  여기서
      주제란 차림에 보여질 내용으로  실제  실행과는  전혀  상관이  없습니다.
      사용자가 단지 구분만 가능 하도록 짧게 써주시면 되는데 여기서는 "화일명
      보기" 정로로 하도록 하죠. 그럼 다음에 실제 명령을 입력해  달라고  주문
      하게 될겁니다. 여기서 실제로  도스  상에서  입력  하듯  명령을  입력해
      주십쇼. 여기서는  "dir  *.*"로  해주세요.  그럼,  모든  입력이  끝나고
      '실행'차림 첫줄에  "화일명  보기"라고  표시가  될겁니다.  하나의  차림
      항목을 만든 샘입니다. 실행은 아무데서나 F5를 누르시거나 차림으로  직접
      이동하셔서 리턴하셔도 됩니다.

      근데 위와 같은 명령은 문서에 상관 없이 고정적이기 때문에  컴파일러등과
      같이 호출할 때마다 명령 내용이 조금씩 달라져야 하는 경우에는 제 기능을
      제데로 발휘할 수 없게 됩니다. 이를 위해서 지금  작업하는  문서에  대한
      정보를 명령에 삽입하는 기능이 있는데 이를 위해 "%P" "%N"  "%E"  세개의
      문자열이 사용됩니다.  명령  문자열중  "%P"는  현재  작업  문서의  페스
      ..PATH.. 로 대치되고 "%N"은 확장자를 제외한 화일명으로 "%E"는 확장자로
      대치 됩니다. 예로  지금  작업하는  문서가  C:\LAN\ASM\TEST.ASM  일경우
      "%P"는 "C:\LAN\ASM\"으로 "%N"은 "TEST"로  "%E"는  ".ASM"의  값을  갖게
      됩니다.  만약  다름과  같은  명령을  정의   했다면   문서가   존재하는
      디렉토리상의 모든 화일명을 출력할 겁니다. "dir %p*.*" 그런데 "dir  %p"
      와 같은경우는 "dir  c:\lan\asm\"  으로  확장되어  버리기  때문에  도스
      에러가 발생 합니다. --  단  4DOS  의  경우는  별  문제를  발생  시키지
      않았습니다. -- 이 문제를 해결하기 위해서 "%p" 는 뒤에 "%n" 이 따라오지
      않는 경우 맨 마지막 "\" 문자를 확장하지 않습니다.

      산의 실행 화면의 초기 설정은 바이오스를 에뮬레시션 하는 것으로

      대부분의 자체적인 화면 출력 루틴을 가지고 있는 프로그램들의 경우  산의
      실행 기능이 처리되지 못하는  경우가  있습니다.  이런  프로그램을  실행
      하실려면 "%t" 명령을 명령입력시 같이 써주시면 됩니다. 위치는  관계하지
      않습니다. "%t" 를 포함하고 있는 경우  실행은  TEXT  MODE  에서  이루어
      집니다.

      ANSI.SYS 와 실행 기능의 충돌에 대해서 말씀 드리겠습니다.  제가  안시의
      레지스터 통신 내용을 분석한  바로는  MS  DOS에  따라오는  안시  시스는
      내부적으로 바 이오스 호출  규약을  어기는  부분이  있은  것  같습니다.
      그래서 현재 산에서 사용  하는  방식으로는  처리가  문제가  있었습니다.
      그러므로 사용자들께서는 안시 사용 시 실행 명령에 %T 문자열을  넣으셔서
      텍스트 모드에서 작동하도록 해주시던지 아니면  피씨  메거진에서  발표한
      ANSI.COM 을 사용해 주십쇼.  ANSI.COM  의  경우  호출에  별다른  문제가
      발견되지 않았습니다. ANSI.COM 은 큰틀이나 다른  비비에  스  자료실에서
      쉽게 찾으실 수 있으실 겁니다.




   4) 선택 차림 ............................Options....................


      산에서는 작업 환경과 자업 대상의 선택에 대해서 융통성을 드리기  위해서
      여러 선택 차림을 제공해 드립니다. 선택 차림에서 제공되는  정보와  기타
      실행시 보존이 필요한 정보는 -- 예로 덩이 글쇠  기록  내용  --  SAN.CNF
      화일에 보관됩니다. 이 환경 저장은 산의 작업 마침시  자동으로  기록되지
      않습니다. 꼭 사용자가 '선택  차림'에서  '환경  저장'을  실행해  주셔야
      합니다.


      한글 글꼴

      산의 출력용 한글 자형을 변경합니다. 산의 압축 화일내에 포함되어 공개된
      한글 자형은 '임꺽정'체 (SAN.KOR) 뿐입니다. 제가 따로 사용자들의 편의를
      위해서 따로 모아서  자료실에  제공해  드리는  자형들은  산의  꾸러미에
      포함되는 것은 아닙니다.

      산에서 사용하실 수 있는 자형 형식은 '도깨비  2'  용으로  도안된  자형,
      임꺽정 체와 같은 10*4*4 형  자형,  '도깹비  3'  용으로  도안된  자형들
      입니다.  이들  자형의  구분은  각  자형  화일의  크기에  의해서   산이
      자체적으로 판단하므로 사용자는  어떤  형식인지에  대해서  아실  필요는
      없습니다. 자형에 실증이 나시거나 그 밖의 문제로 인해서 변경을 원하시는
      분은 도깨비용으로 도안된 폰트를  구해서  사용하시면  됩니다.  도깨비형
      자형은 여러 BBS에서 쉽게 구하실 수 있읍니다.

      자형  추가를  원하실  때는,  일단  원하시는  자형  화일을  산이   있는
      디렉토리로  복사하시고,  '자형   목록   관리기'   ..SANFONT.EXE..   를
      이용하셔서 산의 자형 목록에  등록하셔야  합니다.  일단  등록된  자형은
      '한글 글꼴' 을 선택하신 후 나타나는 선택 창에서 보실 수 있을 것입니다.
      그 밖의 한글 자형 목록의 관리 방식에 대해서는  'SANFONT.EXE'  의  설명
      부분에서 자세히 해 드리겠습니다.

      여기서 선택되는 자형은 화면 출력은 물론이고 그래픽  방식  출력을  하실
      경우 인쇄 자형에도 사용이 됩니다.



      영문 글꼴

      영문 출력용 한글 자형을 변경합니다. 나머지  내용은  한글  글꼴  변경과
      같습니다.



      한글 자판

      한글 자판에는 세벌식 자판과  두벌식  자판이  있읍니다.  보통  컴퓨터의
      구입과 함께 공급되는 키보드에 표시되어 있는 자판 배열은 두벌식 입니다.
      본인이 가지고 있는 자판에 알맞게 선택하세요. 참고로 세벌식 자판에 관한
      자료와 자판옷을 원하시는 분들은 하이텔  큰마을에  정기적으로  계시되는
      한글 문화원의 공지를 찾아 보시기 바랍니다.



      한글 코드

      사용자들의 의견을 수렴해서 1.02 부터 완성형  한글  코드를  지원합니다.
      한자나 일반 대부분의 그림 문자의 경우 조합형과  완성형  코드에서  모두
      지원하기 때문에 변환에 문제가 없습니다. 하지만, ALT-G 로  보시는  그림
      문자 선택 창에 '그림/괘선' 이라고 표시되는  문자들은  완성형에서  사용
      하실 수 없습니다. 이경우 '그림/괘선' 문자를 완성형 모드에서 사용하시면
      코드 변환시 각 문자와 가장  유사한  완성형  코드  그림  문자로  변환해
      드립니다. 그리고 산의 작업시는 문제가  없었지만,  문서  저장후  완성형
      처리 기기에서 보실때 보이지 않는 문자가 있을 수  있습니다.  이는  산의
      자료 처리는 조합형을 기준으로 하기 때문에,  현재  사용되는  모든  음운
      조합을 한글로 만드는 것이 가능하지만, 완성형의 경우 조합  가능  한글의
      약 5 분의 1 만을 정의 했기  때문에  나타나는  현상입니다.  단,  완성형
      코드는 정의시 사용 빈도수를 고려해서 만들어 졌기 때문에 심각한  문제가
      되는 것은 아닙니다.

      그리고 한번 문서를  읽은  후  '한글  코드'를  바꾼다음  저장하는  것도
      가능합니다. 즉 조합형과 완성형간  코드  변환에도  '산'을  이용하실  수
      있습니다. 단 완성형 코드를  사용하시면  입출력  과정에서  약간의  시간
      지연이 생기게 됩니다.



      블럭 정렬

      블럭 정렬에 관계되는 제한 수치나 정렬 방식을 입력 합니다. 블럭  정렬에
      대한 자세한 설명에 대해서는 블럭 기능 설명시 해드립니다.



      문서 인쇄

      이 부분은 인쇄 기능을 조절하는 몇가지 수치와  사용하고  계신  프린터와
      인쇄 방식을 설정하는 부분입니다.

      '왼쪽 위치'에는 행의  처음  데이터가  인쇄될  가로  위치  값을  정하는
      것입니다. 각 줄의 화면상에 보여지는 1열의 데이터가  인쇄  용지에서  이
      왼쪽 위치값이 가리키는 위치에서 부터 인쇄되기 시작합니다.

      '종이 길이'는 한 장의 인쇄 용지당 전체 몇줄의 인쇄가  가능한지를  산에
      알려 주는  역할을  합니다.  실제로  이  값은  낮장을  사용하는  레이져
      프린터에서는 의미가 없습니다. 즉 젼혀 참조 되지 않습니다. 연속  용지를
      사용하는 도트 프린터의 경우만 사용되는  값으로  이  종이  길이의  값과
      다음에 소개될 '바닥 위치' 값이 같을 경우 종이 넘김을 하지 않습니다. --
      Form Feed 문자를 프린터로 전송하지 않습니다. --

      '시작 위치' 는 위의 '왼쪽 위치'가 각 행의 인쇄  위치를  지정하는  것과
      비슷한 것으로 각 페이지당 종이의  맨  위를  기준으로  위에서  몇  번째
      줄부터 인쇄를 시작할 것인지를 결정합니다.

      '바닥 위치' 는 종이의 맨  위를  기준으로  몇  번째  줄까지  인쇄를  할
      것인지를 결정합니다. 그러므로, 요약해 드리면, 실재로  종이에  인쇄되는
      행의 수는 (바닥위치)-(시작위치)+1 이 됩니다.

      '사이 공백' 은 줄과 줄사이에 어느 정도의 공간을 둘  것인지를  결정하는
      것으로 이 값은 프린터 사이에 각 수치가 의미하는  크기가  달라  집니다.
      이유는 '사이 공백'이 지정하는 값의 단위를 각 프린터로 띄울수 있는 가장
      미세한 크기로 하기 때문에 레이져 프린터의 경우는 같은 프린터라도  인쇄
      섬세도에 따라서도 달라지게 됩니다.

      '인쇄 방식' 은 크게 프린터 자체의 한글 모듈을 통해서  인쇄  하는  것이
      있고  산에서  한글  이미지를  프린터로  직접  보내서  인쇄하는  방식이
      있습니다. 한글 모듈을 이용 하시려면 한글 모듈이 인지 하는 한글  코드로
      결정하시면 됩니다. 여기에는 KS 완성형과 KSSM 조합형이  있습니다.  이에
      이이서 표시되는 것들은 직접 Bit Image 를 산에서 출력 함으로써 인쇄하는
      방식으로 한글 모듈이 장착 되지 않는 프린터에서도  인쇄  할  수  있다는
      장점이 있지만 인쇄용 자형이 아니라 화면 자형을 확대해서 찍는  방식이기
      때문에 인쇄물의 질이 좀 떨어지게 됩니다. 그리고 지원 프린터의 종류에도
      제한이 가해지게 됩니다. 현재는 EPSON 8PIN, 24PIN, LaserJet -- PCL 4 를
      인식하는 전 프린터 가능 -- 만을 지원해 드립니다.


      레이져 프린터의 경우는 화면 자형을 그대로 쓰는 관계로
      특히나 레이져 프린터의 그 고상한 품격을 떨어 뜨려 버리는데,
      값싼 인쇄물을 얻을 수 있고 Font Download 방식을 쓰지 않았음에도
      꽤 빠른 속도를 낸다는 장점도 있습니다.
      그리고 300dpi 150dip 100dip 75dip 를 지원하는데,
      300dpi 출력을 하시면 문서 판독에 돋보기가 필요 하실것 같습니다.
      종이를 아끼시려면 150dpi 정도가 괜찮을 것 같고
      약간 크게 찍으시려면 100dpi가 알맞을 것으로 생각 됩니다.

      도트 프린터의 경우, 문자 확대에 특별한 알고리즘을 사용합니다.
      아마 16*16 자형으로 24 핀 프린터에서 찍을 수 있는
      최상의 왼쇄 품질을 얻으시는 것일 겁니다.



      문서 꼬리

      디볼트 문서 확장자를 지정하실 수 있읍니다. 여기 지정된  확장자는  문서
      읽기에 사용되는 초기화 문자열 -- 예 "*.DOC" --  을  정하는데  사용되고
      만약 확장자 없는 화일명이 입력 되었을때 --  예  "README"  --  이  뒤에
      디볼트 확장자를 붙이게 됩니다.

      이에 추가해서 '산' 에서는 다중  확장자  ..Multi  Extention..  이  가능
      합니다. 실행 예를 보여 드리면, '실행' 차림의 '문서 꼬리'에 다음과 같이
      정의 하시고 문서를 읽어 들일때 이름만 써주시면 문서 꼬리에 정의된 모든
      확장 자가 검색 대상이 됩니다.

      문서 꼬리의 내용 예  "DOC;CAP;C;TXT"

      위의 문서 꼬리 정의 에서 문서 읽기에서 "TEST" 를 입력하셨다면 TEST.DOC
      TE ST.CAP TEST.C  TEST.TXT  중에  존재하는  모든  문서가  선택  대상이
      됩니다. 이 기능은 Command Line 에서 'SAN <FILENAME>' 의 형식으로  입력
      하셨을 경우에도 사용됩니다. 그리고  문서  저장시  화일  확장자를  적지
      않으셨다면 다중 확장자 리스트중에서 가장 먼저 발견되는 "DOC" 가 문서의
      확장자로 붙여 집니다.



      시작 준비

      시작 준비가  켜져  ㅌ있고  Command  Line  에서  특별한  문서명을  따로
      지정하지 않으셨다면 산을 실행시키신 후  가장  최근에  작업하던  문서를
      읽어 들여와 작업 준비를 해 드립니다.



      문서 보험

      문서 보험이  켜져  있을때  문서  저장을  하시면,  같은  이름의  화일이
      존재하는 경우 미리 존재하고 있는 화일의 확장자를 BAK로 수정하고 문서를
      저장하게 됩니다. 문서 보험 기능을 끄신다면 화일의 존재 여부를 검사하지
      않고 바로 쓰기를 합니다.  실수로  중요한  화일  위에  덮어쓰는  사고를
      예방하기 위해 '켬'을 권장 합니다.



      일단 저장

      이 기능이 켬으로 되어 있을때는 '도스 이용'을  하시기  전에  지금  작업
      중이던 화일들 저장할 것인가 물어 보게 됩니다. 끔으로  되어  있을  경우
      아무 질문도 없이 도스로 나갑니다.



      신속 갱신

      산의 화면 출력 부는 느린 컴퓨터를 가지고  계신  분들을  위해서  그리고
      빠른 컴퓨터를 가지고 계신 분이실지라 하더라도 좀더 속도감 있는  작업을
      하실 수 있도록 화면 출력 중에 사용자의 글쇠 입력이 있을 경우 즉각 대처
      할 수 있도록 설계되어 있습니다. 하지만 이렇게 될경우 화면이 출력  되다
      마는 현상이 일어 나는데 이런 현상을 막으시려면 신속 갱신을  '끔'  으로
      설정 해주시면 됩니다. '끔'으로 설정하시면 화면  출력  중  입력된  모든
      글쇠는 무시 됩니다.



      환경 저장

      선택사항들과 '실행' 차림에  정의하신  내용과  상태  표시  행에  표시된
      내용들, 덩이 명령 기록 등을 SAN.CNF란 이름으로 저장합니다.




   5) 기타 차림 .......................................................


      그 밖의 차림에 마련된 기능은 아래에서 명령 글쇠를 설명  드리면서  같이
      합니다.



   6) 상태 표시 행 .........................Status Line................


      산은 입력 방식과 관련된 내용들과 그 밖에 항상 확인이  필요한  부분들의
      표시를 위해서 화면의  맨  밑의  한  행을  상태  표시  행으로  할애하고
      있습니다. 이 작은 절에선 표시되는 내용에 대한 설명을 드리겠습니다.

────────────────────────────────────────
^K   행 1085/2301  열  20   삽입   들임   한글   선보호     * C:USING.DOC      1
┬─────┬────┬──┬───┬──┬───┬───┬─┬───────┬
│          │        │    │      │    │      │      │  └문서명        │
│          │        │    │      │    │      │      └──문서 수정 여부│
│          │        │    │      │    │      └선보호/길이제한           │
│          │        │    │      │    └────한영 전환 상태            │
│          │        │    │      └───────들여 쓰기 켬/끔           │
│          │        │    └───────────삽입 기능 켬/끔           │
│          │        └──────────────현재 커서 열              │
│          └───────────────────현재 커서 행              │
└─────────────────────────복합 입력 글쇠 표시       │
                                                                              │
                                                            현재 작업 마당──┘

      복합 입력 글쇠 표시

      CTRL-K?,CTRL-Q?,CTRL-O? 등의  복합  입력의  글쇠  묶음의  첫번째  키가
      눌려짐을 표시합니다.



      현재 커서 행,열

      그다음 영역에선 지금 커서의 위치를 행과  열로  표시합니다.  행과  함께
      표시 되는 내용은 현재 작업중인 문서의 길이 (줄 수) 입니다.



      그 다음은 끼워쓰기 여부 ('삽입' 으로 표시), 자동 들여쓰기 여부 ('들임'
      으로 표시), 현재 입력 언어 ('한글' '영문' 으로 표시), 선문자 보호 여부
      ('선보호'로 표시), 길이 제한 작동여부 ( '길이 제한'  으로  표시  )  가
      차례 대로 표시 되는데, 표시 되었을때가 켜진 상태 입니다. 여기서  한글,
      알파벳 입력 모드의 구분은  커서  모양으로도  판별  가능합니다.  커서가
      직사각형이면 한글 입력 모드, 밑줄이면 영문  입력  모드  입니다.  '길이
      제한' 기능와 '선  보호'  기능은  한꺼  번에  사용  하실  수  없습니다.
      그러므로 '길이 제한' 기능 동작중 '선 보호' 기능을 작동 시키시면  '길이
      제한' 기능은 자동적으로 꺼지게 됩니다.



      그 다음은 현재 작업하고 있는 문서 명이 표시 됩니다. 문서  명  앞의  별
      표는 문서에 수정이 가해 져서 저장이 필요하다는 뜻입니다. 문서가 파괴될
      경우에 -- 다른 문서를 읽던가 작업을 끝내던가 -- 각 작업 영역의 문서 중
      작업 종료시 '*' 가 되어있는 문서에 한해서 저장 여부를 묻게 됩니다.



      그 다음 숫자 1,2,3은 현재의 작업 마당의 번호를 나타냅니다.




┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃４   본격적인 문서 작업                                                     ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛


   1) 산에서의 작업 방식에 대한 이해 ..................................


      산에서 글을 쓰실 때는 하나의 큰 종이에 써  나간다고  생각하십쇼.  산을
      실행하시면서 보시게 되는 화면은 큰 종이의 일 부분에  지나지  않습니다.
      맨 마지막 줄과 윗 줄을 제외한 실제  문서  내용의  표시  화면은  하나의
      창문입니다. 여러분은 이 큰 종이를 이 창문을 통해서 창문 크기 만큼만 한
      번에 보실 수 있읍니다. 산에서 쓰는 종이의  크기는  가로가  254칸  이고
      세로는 사용자가 바탕  깔개  프로그램에서  ..SANSETUP..  '문서  크기'로
      정하실 수 있습니다. 사용자는 커서를 움직이심으로써  원하시는  부분으로
      가실 수 있고 필요하다면 커서의 움직임에 따라서 창문이 움직이게 됩니다.
      산에선 이 종이를 '작업 마당'이라고 부릅니다. 사용자는  동시에  3  장의
      커다란 종이에 서로 다른 글을 쓰실  수  있습니다.  즉  1번부터  3번까지
      번호가 붙은 3개의 작업 마당이 존재 합니다. 물론 작업  마당간에는  서로
      정보의 교환이 가능 합니다.

                                 254 칸
                  ┌─────────────────┐
                  │                                  │
                ┏━━━━━━━━━━━━━━━━━━━┓
                ┃  ..........                          ┃
                ┃............                          ┃
       종이 ──┨................                      ┃
                ┃  ............                        ┃
                ┃ ..............                       ┃
                ┃ ..............                       ┃
                ┃ .......┌──────────────╂───현재 열
                ┃  ┏━━┿━━━┓                    ┃
현재 창으로 ──╂─┨....│      ┃                    ┃
보는 부분       ┃ .┃...■.....─╂─┐                ┃
                ┃ .┃........    ┃  └────────╂───현재 행
                ┃  ┗━━━━━━┛                    ┃
                ┃ .......................              ┃
                ┃ ..............                       ┃
                ┃ ................                     ┃
                ┃ .................──────────╂───문서 끝행
                ┃                                      ┃
                ┃                                      ┃
                ┃                                      ┃
                ┃                                      ┃
                ┃                                      ┃
                ┃                                      ┃
                ┗━━━━━━━━━━━━━━━━━━━┛───최대 문서 크기

                         < 작업 마당의 구성 >


      여러 분은 일반 종이에다 직접 글을 쓰시는 것보다 산의  전자  종이  위에
      쓰시는 것이 여러 가지 좋다는 점을 발견하실 수 있을 겁니다. 산에선 보통
      종이에서 불가능한 열러 가지 편리한 작업이  가능하기  때문이죠.  뒤에서
      하나 하나 설명드리겠습니다.


   2) 자리 이동 기능들 ................................................


       쓰고 고치기에 앞서서 먼저 기본적인 커서 이동 글쇠를  설명합니다.
       산에서 쓰이는 이동  글쇠는  대부분의  워드  프로세서  계열  자판
       배열과 같게  만들었습니다.  자리  이동에  관련된  기능은  차림의
       형식으로 지원 되지 않습니다. 그렇므로 이 작은 절에서 설명 드리는
       내용들은 꼭 알고 계셔야 산을 제데로 사용하실 수 있습니다.

       ────────────────────────────────

           CTRL-S , LEFT  ARROW        한자 만큼 왼쪽으로   움직입니다.
           CTRL-D , RIGHT ARROW        한자 만큼 오른쪽으로 움직입니다.

       행의 처음과 끝에 있을때는 앞으로 나가거나 뒤로  더이상  움직이지
       않습니다.

       ────────────────────────────────

           CTRL-E , UP    ARROW        한행 올라 갑니다.
           CTRL-X , DOWN  ARROW        한행 내려 갑니다.

       문서 첫 행이나 문서 끝  행에서는  더이상  올라가거나  내려갈  수
       없습니다. 문서에 행을 추가하시려면 행의 끝 문자를 넘어서  CTRL-N
       (행분할) 하시거나 '삽입' 기능을 켜놓으시고 행의 끝 문자를 넘어서
       [RETURN]을 누르시면  됩니다.  여러  행의  빈  공간을  넣으시려면
       '삽입' 차림의 '빈줄 삽입'을 선택 하십쇼.

       ────────────────────────────────

           CTRL-A , CTRL LEFT  ARROW   한 단어 만큼 왼쪽으로   갑니다.
           CTRL-F , CTRL RIGHT ARROW   한 던어 만큼 오른쪽으로 갑니다.

       여기에서  말하는  단어란  영어,숫자,한글이  연속적으로  나타나는
       덩어리를 말합니다. 즉 단어와 단어의 구분은 공백이나 기호로  하게
       됩니다. 만약 행이 아직 시작되지 않은 곳에서 -- 현재 행에서  커서
       앞 부분이 모두 공백으로 구성된 경우 -- '한 단어 왼쪽으로' 글쇠를
       누르시면 윗 행 끝 문자로 이동합니다.  반대로  행의  끝을  지나친
       곳에서 -- 현재 행에서 커서 뒷 부분에 더 이상 문자가 없는 경우 --
       '한 단어 오른쪽으로'  글쇠를  누르시면  다음  행의  시작  문자로
       이동합니다. 단, 위나 밑 행이 빈 행이라면 건너 뀌게 됩니다.

       ────────────────────────────────

           CTRL-Z                      이동 창문을 한칸 내립니다.
           CTRL-W                      아동 창문을 한칸 올립니다.

       위에서 말씀 드렸듯이 여러분이 화면으로 보시는 부분은 산에서 쓰는
       커다란 종이의 일부분 입니다. 화면을 하나의 창으로 보신다면, 이때
       위 두 글쇠는 커서의 위치는 그대로 두고,이 창을  움직이는  역할을
       합니다. 단 커서가 창의 가장 위에 있을때 창문을  내리거나  창문의
       가장  아래에  있을때  창문을  더  올릴경우  커서가   한   행만큼
       내려오거나 올라가게 됩니다.

       ────────────────────────────────

           CTRL-R , PgUp               커서가 창의 높이 만큼 올라 갑니다.
           CTRL-C , PgDn               커서가 창의 높이 만큼 내려 갑니다.

       위 두 글쇠는 커서 위치를  창  높이만큼  올리거나  내리기  위해서
       사용합니다. 창의 높이는 출력 드라이버에 따라 달라집니다. 단 현재
       행이 창높이 보다 적을 경우에 CTRL-R을 누르시면 첫행으로 이동하고
       거의 문서 끝에  온  상태에서  CTRL-C를  누르시면  문서의  끝으로
       이동합니다.

       ────────────────────────────────

           CTRL-QP                     저번 위치로

       지난 위치를 기억했다가 다시  복귀하는  기능으로,  어떤  이유에서
       커서가 갑자기 멀리 이동했을때--예를 들자면  실수로  검색  글쇠를
       눌러서 문서 끝으로 왔다던가-- 돌아가기 위해 사용하십쇼.

       ────────────────────────────────

           CTRL-QS, HOME               행 처음으로
           CTRL-QD, END                행 끝으로

       행 처음으로 기능은 무조건 커서를 지금 행의 1열로 이동  시킵니다.
       행 끝은 공백이 아닌 문자가 존재하는 맨 끝 열로 간주 합니다.

       ────────────────────────────────

           CTRL-QE, CTRL-HOME          화면 맨 위로
           CTRL-QX, CTRL-END           화면 맨 밑으로

       화면 맨 위란것은 현재 창문이 표시하는 부분중 제일 처음 행을 의미
       합니다. 화면 맨 밑도 같은 내용 입니다.

       ────────────────────────────────

           CTRL-QR, CTRL-PgUp          문서 처음으로
           CTRL-QC, CTRL-PgDn          문서 끝으로

       '문서 처음으로'는 커서를 1행 1열에 위치시키고,  '문서  끝으로'는
       커서를 마지막 행의 마지막 문자에 위치 시킵니다.

       ────────────────────────────────

           CTRL-QB                     블럭 처음으로
           CTRL-QK                     블럭 끝으로

       블럭의 시작과 끝으로 커서를 위치 시킵니다. 이때 블럭이  지정되어
       있어야 합니다. 일단 블럭이 지정되었던 후라면  현재  블럭  표시가
       화면에 나타나지 않더라도 이동합니다.

       ─────────────────────────────────

   3) 내용 쓰기 기능들 ................................................


       이 절에서는 쓰기에 관해 설명합니다. 산은 사용자들의 입력을  크게
       나누어 2가지로 해석하는데 한 부류는 기능 글쇠로 쓰기 작업을 돕기
       위해 여러 가지 특수한 지정된 기능을 수행하는 것입니다. 나머지 한
       부류는 사용자의 입력이 그대로 종이에 써지는 것으로 이때, 몇 가지
       조건에 따라서 사용자가 입력하는 숫자, 알파벳, 한글  그리고  특수
       기호나 그림 문자가 종이에 써지는 겁니다.

       한글과  선  문자를  포함한  그림  문자는  2열을  차지하게   되고
       알파벳이나 문장 부호등은 1열로 표시 됩니다. 과거 버젼에서는 기능
       글쇠에 해당하는 글쇠 값은 입력 받을 수 없었지만  1.0  버젼  이후
       기능 글쇠에 대응 되는 ASCII 코드 값을 입력 받을 수  있는  기능을
       가지고 있습니다.

       그럼, 먼저 입력 방식 변환 글쇠 들을 설명 드리고, 뒤에 특수  입력
       기능들을 설명드리겠 습니다.


       ────────────────────────────────

           SHIFT-SPACE                 한글/알파벳 입력 전환

       여러분도 보시다 시피 자판에는 한 글쇠당 한글, 알파벳이 같이 배열
       되어 있읍니다. 상태 표시 행에 '한글'이 표시되고 있거나 커서가 직
       사각형일때는 글쇠를 누르실때 마다 해당하는  한글의  자소가  하나
       하나 조합되고 출력될 겁니다.

       한글은 그 성격상 입력시 조합이 필요하게 되는데 한글 조합에  바로
       잇다르는 영문자나 기호는  한글의  바로  전  입력한  한글의  뒤에
       삽입이 되나 조합이 일단 끝난 한글 위에서 -- 예: 이동글쇠로  어떤
       한글로 이동한경우 -- 영문자나 기호 그밖의 문자를  입력하게  되면
       뒤에 잇따르지 않고, 한글의 앞에 삽입되거나 그위에 덮어 써집니다.

       '영문'이  표시  되고  있거나  커서가  밑줄일때는  물론  알파벳이
       입력됩니다. 기타 한자나 그림 문자 등은 자판에서 직접 입력이 되지
       않습니다. 이들을 위해서는 특별한 입력 방법이 제공 됩니다.

       또한, 한영 전환 시에는 작은 탁탁 소리가 나게 됩니다.

       ────────────────────────────────

           CTRL-V , INS                삽입 모드 켜기/끄기

       삽입 모드인지 아닌지는 화면 맨 밑 줄의  상태  표시  행을  보시면
       됩니다. '삽입'이라는 표시가 되어 있을 때가 삽입 모드인데  이  때
       입력하는 모든 한글, 영문, 기호, 그림 문자들은 커서  위치에  문자
       크기만큼 자리를 삽입하고 존재해 있던 문자들을 뒤로 밀게  됩니다.
       이때 행의 길이가 254칸이 되어 버린 경우는 더  이상  입력이  되지
       않습니다.

       '삽입'이 꺼진 상태에서 모든 쓰기는 먼저 있던  내용의  위에  일어
       납니다. 즉 덮어 쓰게 됩니다. 덮어 쓰게 됨으로서 한글의  앞부분이
       잘리게 되면 -- 예로  "...123개의  사과가  나무에..."  란  문장이
       있을때 '3'의 위치에서 한글을 입력하시면 '개'의  앞부분이  잘리게
       될겁니다. -- 잘려진 한글의 뒷부분은 빈칸으로 채워 집니다.

       그리고 '삽입'  켬/끔은  몇가지  기능에  대해서도  영향을  미치게
       되는데 그에 대해서는 각 기능 설명때 포함하도록 하겠읍니다.

       ────────────────────────────────

           CTRL-QI, CTRL-OI            들임 켜기/끄기

       들여쓰기는 [RETURN]글쇠의 설명때 자세히 합니다.

       ────────────────────────────────

           CTRL-OL                     선보호 모드 켜기/끄기

       산에서 가입서 등의 형식화된 문서를  만들  때를  위해서  만들어진
       기능입니다. 일단 선그리기 기능으로 문서 형식을 그리세요. 그리고,
       '선 보호' 기능을 켜시면 상태  표시  행에  '선  보호'라는  표시가
       됩니다. 선 보호 시에는 쓰거나 지움으로서  문서의  형식이  깨지는
       현상을 막는데, 자세히 설명하면  삽입시에  현재  커서의  뒷부분에
       위치하는 첫 번째  선  문자부터는  삽입에  따른  이동이  일어나지
       않으며, 문자 지우기 기능을 사용해도 그림 문자의 위치부터는  행이
       딸려오는 현상이 없어 집니다.  물론  그림문자  위에  덮어  쓰기도
       불가능합니다. 리턴의 행분할 기능도 정지 되나 CTRL-N 에  의한  행
       분할에는 영향을 미치지 않습니다.


       ────────────────────────────────

           CTRL-OK                     길이 제한 켜기/끄기


       길이 제한 기능은 워드렙 기능으로도 불리 웁니다. 이 기능의 기동은
       CTRL-OK 나 '입력' 차림에서의 선택으로 하실 수 있습니다. 단, 길이
       제한 기능은 '선 문자' 보호 기능과 함께 작동될  수  없으며,  글을
       자동 절단하는 과정에서 설정되어 있던 블럭은  모두  해제  됩니다.
       길이 제한 모드에 사용되는 왼쪽  오른쪽  제한  열의  수치는  블럭
       정렬시 사용되는 수치를 그대로  사용합니다.  그리고  절단은  어절
       단위로 이루어 지고  별도의  아무  처리도  이루어  지지  않으므로
       필요하다면 블럭 정렬 기능을 사용해서 전체를 다시  정렬할  필요가
       있습니다.

       ────────────────────────────────




       ────────────────────────────────

           F4     ,Alt-G               그림 문자 입력

       그림 문자는 글쇠 배당이 없기 때문에 선택  상자  내에서  원하시는
       것을 골라  쓰셔야  합니다.  산에서  사용하는  그림  문자는  크게
       7가지로 구분 됩니다. 현재 선택되어 있는 집합은  그림  문자  입력
       상자의   왼쪽에   표시   됩니다.   각   집합    사이의    이동은
       [PgUp]/[PgDn]으로 하십쇼. 그림 문자는 한 번에 한  문자  또는  한
       번에 여러 문자를 입력 하실수 있는데, 한 문자  입력시는  원하시는
       위치에서  [RETURN]하십쇼.  여려  문자   입력을   원하시는   경우
       [SPACE],[+] 글쇠등 으로 원하시는 문자들을 하나  하나  선택하시면
       상자 밑부분에 표시 됩니다. [SPACE]는 선택후 다음칸으로 이동하고,
       [+]는 이동이 없습니다. [BackSpace]로 마지막 입력된 문자를 지우실
       수 있읍니다. 입력을  끝내시려면  [RETURN]을  누르세요.  단  이때
       [RETURN]에 의해서는 문자가 추가되지 않습니다.

       ────────────────────────────────

           CTRL-B                      모든 글쇠를 입력 받기

       산에서는 CTRL, ALT 글쇠와 알파벳  글쇠와의  조합에  의해서  많은
       기능들을 실행 합니다. 하지만 종종  ASCII  코드의  CTRL  문자들의
       입력이 필요해 집니다. 왜냐면, 이들 글쇠와 이 ASCII  코드에  정의
       되어 있는 값들과 대응되기 때문입니다. 예로, CTRL-S  가  좌측으로
       이동하는 것이 아니라 직접 문서  내용으로  써질  필요가  있을  수
       있습니다. CTRL-B 를 누르시면 상태 표시행의 좌측에 '^B'라고  표시
       됩니다. 이때 입력되는 글쇠는 제 기능을  하지  않고  직접  문서에
       써지게 됩니다. 인쇄시 Ctrl-F 문자는  종이  올림  기능을  합니다.
       이런 문자를 문서에 써 놓고 인쇄를 하면  (  완성형,  조합형  모듈
       모드 ) Ctrl-F 문자가 프린터에 전달 되자마자  Form  Feed  됩니다.
       이때 입력은 <Ctrl-B><Ctrl-F> 순이 됩니다.

       ────────────────────────────────

              f9                       한글/한자 변환


       한자는 산의 디렉토리에 "SAN.HAN" 자형이  있어야  사용  가능하며,
       만약 산의 기동시 발견되지 않는다면 한자  처리는  불가능  합니다.
       한자의 운영은 자체적으로 400자의 자형 케쉬를 가지고 하게 됩니다.
       한글을 대응되는 음의  한자로  변환  하려면  한글  위에서  F9  를
       누르시면 됩니다. 한자도 물론 완성형 코드, 조합형  코드  모두에서
       사용가능 합니다. 인쇄시도 자동 변환 됩니다. 한자를  한글로  변환
       하시려면 변환 하시려는 한자 위에서 F9 를 누르시면 됩니다. 변환후
       커서는 다음 글자로 이동 합니다.

       ────────────────────────────────

               ALT-T                  TAB 문자 치환하기

       산에선ㅌ TAB 문자를 특별히 다루지 않습니다.  그래서  TAB  문자를
       포함한 문서의 편집이 곤란한 때가 있는데 약간의 편법이긴 합니다만
       TAB 문자를  알맞은  크기의  공백으로  치환해  주는  기능이  추가
       되었습니다. ALT-T 를 누르시면 별다른 질문 없이 문서내의 모든 TAB
       문자가 정리 됩니다.

       ────────────────────────────────

               ALT-D                  선 그리기


       선 그리기는 서류 양식등을  그리거나  할때  사용하는  기능입니다.
       본인은 이것을 주로 문서 치장하는데 사용하기도 합니다.

       산의 선 그리기 루틴은 다른  부분에  비해서  꾀  큰  크기를  차지
       합니다. 그 만큼 사용에 편리하게 만들어져 있습니다.

       그림 문자 하나가 영문 2칸만큼을 차지하기  때문에  산의  선그리기
       기능에서는 커서의 이동이 2칸 단위로 이루어 집니다. 선 그리기에서
       사용되는 명령들은 차림 행에 표시되고 어떤 기능에는  글쇠  호환을
       위해 2개 이상의 글쇠를 배당하기도 했읍니다.

       선 그리기 상태의 명령 배열은 크게 2가지로  나뉘게  됩니다.  먼저
       쉽게 기억되게 하기위해서 각 기능을  관계되는  영어  단어의  머리
       글자를 따서 만들었습니다.

       Draw.....'D'      Erase .....'E'       Graphic Char....'G'
       Move.....'M'      Line Sort..'L'

       그런데 위의 글쇠는 기억은 쉬우나 자판 사이에서 너무 멀리  떨어져
       있기  때문에  오른손으로  키패드를  사용  하시는  분들은  약간의
       불편함이 있으실 것입니다. 그래서 같은 기능에  다른  명령  배열을
       가지고 있습니다.

                    ┌─── 지우기
                    │
                  ┌─┐
                  │E │
                  └─┘
        ┌─┐┌─┐┌─┐┌─┐
        │A ││S ││D ││F │─── 이동
        └─┘└─┘└─┘└─┘
          │    │    └─────── 그리기
          │    └────────── 선문자 선택
          └───────────── 그림문자 그리기


       선 그리기에서는 모두 4개의 상황이  있을  수  있습니다.  첫번째는
       보통 커서 이동 상태이고,  나머지  3개는  선그리기,  그림  문자로
       그리기, 지우기 등입니다. 그래서 앞의 이동 기능에  대응해서  뒤의
       3개지 기능을 수정 기능이라고 하겠습니다. 그리고 각  상태  변화에
       대해서  맨  윗줄의  기능  표시  막대가  앞의  4항목을   요리죠리
       이동합니다.

       선 그리기 상태로 일단 들어가면 초기에는 이동 상태에 있게 됩니다.
       이동 상태에서는 커서가  밑줄을  이루고  그리기나  지우기등  수정
       상태에서는 직사각 형이 됩니다.

              [D]         선  :  선그리기를 합니다.
              [G/A/F4]    그림:  그림 문자로 그리기를 합니다.
              [M/F]       이동:  커서를 이동합니다.
              [SPACE]     전환:  수정 상태와 이동 상태를 전환 합니다.
                                 이때 수정 상태에서 이동 상태로 가는
                                 경우 수정 상태의 종류를 기억 했다가
                                 수정  상태로  돌아올 때 전의 상태로
                                 돌아 갑니다.
              [L/S/1..8]  종류:  선그리기에 사용되는 선의 모양을 결정
                                 합니다. [L]은 선택 상자 내에서  선택
                                 하는  방식이고  직접  수치를  입력함
                                 으로써 바로 선택도 가능합니다.
                                 일단 선 종류를 선택 하시면  자동으로
                                 선 그리기 상태가 됩니다.

       선  그리기  모드에서는  커서가  움직여  가는  부분에  선이  계속
       연장되어 나갑니다. 이때 움직여간 위치의 좌우  또는  위  아래에도
       선을 나타내는 문자가 있다면 그에 알맞도록 선  문자가  선택  되어
       집니다. 그릴 때 먼저 있던 문서 내용에 대한 어떠한 보호도  이루어
       지지 않으므로 주의해 주세요. 그리고 선의 종류는  크게  2  종류가
       있는데 1번부터 4번가지의 가는 선들과 5 번 부터 8번 까지의 두꺼운
       선이 있습니다.  이  2개  부분의  선들은  서로  섞이지  못합니다.
       그러므로 바로 위에 설명드린 자동 선문자 선택은  같은  종류의  선
       문자 사이에서만 가능해 집니다.

       지우기 상태에서는 일반  한글이나  영문을  제외한  그림  문자만이
       지우기의 대상이 됩니다. 세로로  그려진  선은  세로로  이동하면서
       지울때만 지워지며 가로로 그어진 선은 가로로 이동하면서  지울때만
       지워집니다.

       ────────────────────────────────



   4) 삽입 삭제 기능들 ................................................


       ────────────────────────────────

           CTRL-N                      행 분할

       현재 커서가있는  부분부터  잘라서  새로운  행을  하나  만듭니다.
       커서의 위치는 보존 됩니다.

       ────────────────────────────────

           RETURN                      다음 행 입력의 준비

       리턴은 새로운 행에 대한  입력을  준비합니다.  이  글쇠에  배당된
       기능들은 '끼워쓰기'와 '들여쓰기'에 영향을 많이 받습니다.

       먼저 '끼워 쓰기'를 켰을 때는 [RETURN]에 의해서  현재  커서  위치
       부터 행의 뒷 부분을 잘라서 새로운 행을 만듭니다. 이때 들여쓰기가
       켜져있다면 새로운 행이 생기자 마자  자동으로  들여쓰기를  해드릴
       겁니다. 들여쓰기가 꺼져 있다면  행을  나눈후  다음  커서는  행의
       1열로 이동합니다.

       '끼워쓰기'가 꺼진 상태에서 [RETURN]을 누르시면 행 분할이  이루어
       지지 않고 다음 행으로 커서가 이동합니다. 단 문서 마지막 행에서는
       빈 행이 추가 됩니다. 이 때, '들여쓰기'가 작동 중이면  다음  행의
       시작 문자로 커서가 이동하게 됩니다.

       요약해보면,[RETURN]은 '끼워쓰기'와 '들여쓰기'의 작동 여부에 따라
       모두 4가지 반응을 보이게 됩니다. 직접 해보세요. 눈으로  확인하는
       것이 가장 좋은 방법이닌까요.

       ────────────────────────────────

           CTRL-Y                      한줄 지우기

       현재 커서가 위치해 있는 행을 지웁니다. 지워진 행은  밑에서  끌어
       올려진 행으로 채워집니다. 단  문서  마지막  행에서  줄  지우기를
       하시면 단지 행을 공백으로 채우기만 합니다.

       줄지우기 기능은 여러분의 실수로 인한  자료의  손실을  막기위해서
       지워진  줄을  따로  보관해  둡니다.  밑의   지운   줄   살리기를
       참고하세요.

       ────────────────────────────────

           CTRL-U                      지운줄 살리기

       '한줄 지우기'나 '블럭 지우기'등으로 인해서  행이  통채로  지워진
       경우 살리는 기능입니다. 열  단위  블럭의  경우  행의  일부분만이
       해당될 수도 있읍니다.  '산'은  이러한  지워진  행을  512개  까지
       기억하고 있다가 원하시는 곳에서 CTRL-U를  누르시면  현재  커서가
       위치해 있는 행에 가장 최근 지워진 행을 삽입합니다.

       또,이 기능에서 사용하는 저장 영역은 작업  영역당  따로  배당되어
       있는 것이 아니므로 어떤 작업  영역에서  줄을  지우고  다른  작업
       영역에서 줄을 살려냄으로서 간단히 자료를 이동하실 수도 있읍니다.
       물론, 이러한 기능은 블럭 전송 기능으로도 가능합니다.

       ────────────────────────────────

           CTRL-QY                     행 끝까지 지우기

       현재 커서가 위치해 있는 곳부터 행의 끝까지  지우게  됩니다.  '선
       보호'가 켜 있을 때는 현재 행에서  커서  위치  다음의  제일  처음
       발견되는 선 문자 전까지 지우게 됩니다. 이 기능으로  지워진  행은
       CTRL-U로  복구  되지  않습니다.  하지만  다른  행으로   이동하지
       않았다면 CTRL-QL 기능으로 현재 행을 복구할 수 있읍니다.

       ────────────────────────────────

           CTRL-H , BACKSPACE          왼쪽 문자 지우기

       현재 커서 위치 바로 왼쪽의 문자를 지웁니다.

       [BACKSPACE]는 또한 특수한 기능을 하기도 하는데, 현재  행이  공백
       행인 경우나 현재 커서가 행의 처음 문자  위에  있을  때  사용하게
       되면 행의 시작을 윗 행 중 행의 시작이 현재  커서  위치보다  작은
       행의 처음에 맞추게 됩니다. 들여 쓰기의 반대라고 할 수  있읍니다.
       그리고 만약 1열에서 사용하게 되면 문서의  처음  행이  아닌  이상
       현재 행을 윗 행에 붙입니다. 이 기능도 다른 여타 행  수정  기능과
       같이 '선 보호'의 영향을 받습니다.

       ────────────────────────────────

           CTRL-G , DEL                한 문자 지우기

       현재 커서가 위치해 있는 부분의 문자를 잡아 먹습니다. 문자가 없어
       짐에 따라 행의 뒷 부분이 줄줄이 앞으로 당겨  집니다.  만약  현재
       커서가 행의 끝을 넘어 섰다면  이  명령에  위해서  밑  줄이  딸려
       올라옵니다.

       ────────────────────────────────

           CTRL-T                      한단어 만큼 지우기

       현재 커서 위치부터 단어의  끝까지  지웁니다.  이  기능에  쓰이는
       단어의 의미는 다음 문자들을 구분 문자로 해서  형성되는  문자들의
       묶음입니다.

                   [  #<>,;.()[]{}~`^'*+-/$%:"  ]

       ────────────────────────────────




   5) 영역 관리 기능들 .....................Window Management..........


       산에서  사용되는  종이는  모두  3개로,  여태까지  작업  마당으로
       언급하기도  했읍니다.  이  절은  기본적인   작업   마당   관리를
       설명합니다.

       산은 메모리 크기에 작업  문서  크기를  제한  받기  때문에,  문서
       크기가 너무 커질 때에는 더 이상의 입력이 불가능 합니다. 이  때는
       산이  메모리  부족을  알려  드립니다.  메모리가  충분하지   않은
       상황에서 블럭 복사 등의 작업을 하시면, 산이 예상  메모리  크기를
       계산해서 미리 알려 드리지만,  복사중에  사용되는  메모리  크기나
       너무 가변 적이라 이러한 경우, 작업  도중  더  이상  사용  가능한
       메모리가 없다면 전 작업을 중지하고 화일의 저장 여부를 여쭤본  후
       산의 실행을 끝마치게 됩니다.

       ────────────────────────────────

           ALT-S                       작업 마당 상태 보기

       현재 작업 마당의 상태를 보여 줍니다. 이때 나타나는 정보는

       최대행수            : 바탕 깔개에서 정하신 문서의 최대 크기
       현재 행수           : 현재의 작업 중인 문서의 길이
       현재 행             : 현재  커서가  위치하고  있는  행
       최대 작업영역 크기  : 사용할 수 있는 최대 메모리 크기
       현재 남은 영역 크기 : 남은 메모리 크기.

       ────────────────────────────────

           ALT-R                       작업 마당 정리

       처음 산을 실행시키시고 문서를 읽으신 상태에서는 메모리에  각  행
       순으로 차곡 차곡 자료가 저장된 상태이지만, 새로운 행을 삽입하고,
       블럭을 이동하고, 지우고 하는 과정에서 중간에  듬성  듬성  못쓰는
       메모리가 생길 수 있읍니다.

       이 기능은 다시 첫 행부터 정리하기  위해서  사용하는  것으로,  이
       기능에 따라 넓힐 수 있는  남은  영역의  크기는  정확한  계산으로
       얻기가 불가능합니다. 각 경우에 따라 효과가 있을 수도  없을  수도
       있읍니다. 작업 마당 정리가 몇 차례  끝난  후에도  메모리가  부족
       하다면 더 이상의  작업은  곤란한  상태이며  이  때는  그  때까지
       작업하신 문서를 저장하시고, 더 이상의 추가 작업은 새로운  문서로
       해주십시요.

       ────────────────────────────────

           ALT-1,2,3,N                 작업 마당 변경

       산에서 작업 마당은 3개라고 말씀드렸읍니다.  즉,  종이가  3장이란
       말입니다. 이때 [ALT]를 누른 상태에서 숫자 글쇠 [1]  [2]  [3]  을
       누르시면 각각 원하는 작업 마당으로 이동하실 수 있읍니다.

       각 작업 마당에서는 하나의 문서를 읽어 들여 작업하실 수 있읍니다.
       그리고, 문서간 자료 이동도 가능합니다. 문서간 자료  이동은  블럭
       기능에서 설명 합니다.

       [ALT-N]은 다음 작업 마당으로 이동합니다.

       ────────────────────────────────




   6) 블럭 관리 기능들 ................................................


       산의 블럭  처리  부는  가장  덩치  큰  부분이며,  매우  복잡하게
       만들어져 있습니다. 이 말은  그  만큼  사용자  여러분께  다양하고
       편리한 기능들을 제공한다는 것이 되겠습니다.

       블럭이란 산의 작업 영역의 연속된 일 부분을 정한  것으로써,  블럭
       기능들은 이 부분 전체에 대해서 영향을 미치게 됩니다.  글의  문단
       이동이나 줄 맞춤, 정렬, 작업 영역간 자료 교환등이 가능 합니다.

       산에서 정할 수 있는 블럭의 종류는 모두 3 가지로, 문자  단위,  열
       단위, 행 단위 블럭이 있읍니다. 직접 지정을 해 보심으로써  확인해
       보십쇼. 그럼 지정 기능 부터 차례대로 설명 드리겠습니다.


       ────────────────────────────────

               ALT-A                   문자 단위 블럭 설정

       이 기능은 블럭의 가장  기초적인  형태로서,  문서를  하나의  문자
       나열로 생각하고, 한 문자부터 후에 나타나는 어떤 한  문자  사이를
       블럭 처리의 범위로 정하는 것입니다.

       ALT-A,L,K 공통적으로, 일단 글쇠를 누르시면  그때부터  블럭  구역
       결정이 시작 되며 커서가 움직임에 따라 블럭의 구역이 변경 됩니다.
       이 때는 산의 모든 기능을  이용해서  커서를  아무  곳으로든  자유
       자제로 이동할  수  있읍니다.  --  문자  열  찾기  기능등의  고급
       기능으로 원하시는 곳으로 빠르게 이동하실 수도 있고. -- 일단 영역
       지정이 끝나셨으면 같은 글쇠를 한  번  더  누르셔서  산에  신호를
       주시면 됩니다.

       ────────────────────────────────

               ALT-L                   행   단위 블럭 지정

       문자 단위에 대조적으로 이 기능은 행을 단위로  블럭  처리의  적용
       범위를 결정하는 것으로서, 다른  블럭과  함께  지원되는  기본적인
       기능 외에 몇가지 유용한 특수 기능을 사용하실 수 있읍니다.  만약,
       행 단위 블럭이 아닌 다른 형식의 블럭을 설정하신 상황에서 행 단위
       블럭의  특수  기능을  사용하시면  산이  자동으로  행  단위  블럭
       형식으로 변경해 드립니다.

       ────────────────────────────────

               ALT-K                   열   단위 블럭 지정

       열  단위  블럭이란  것은  문서  내  어떤  지점과  또  한  지점을
       대각선으로 하는 직사각형의 영역을 블럭으로 지정하는 것입니다.

       한글의 경우 2칸, 알파벳의 경우 1칸을 차지 하는  등  한글  문서의
       문자 단위 크기가 일정하지 않으므로  열  단의  블럭  지정시  블럭
       바깥으로 한칸씩 빗겨 나가는 한글이 존재 할 수 있읍니다.

       열 단위 블럭 지정 이후  사용되는  블럭  처리  명령은  이  반전된
       부분에 적용이 됩니다. 즉 빗겨 나간 한글문자가 있을  경우  그것도
       포함해서 처리합니다.

       ────────────────────────────────

               CTRL-KB                 문자 단위 블럭의 처음 표시
               CTRL-KK                 문다 단위 블럭의 끝   표시

       위에서 보시다  시피  문자  단위  블럭은  ALT-A로  결정  하실  수
       있읍니다. 하지만 같은 부류의  다른  프로그램들과의  글쇠  호환을
       위해서 별도로 위의 두 글쇠를 정의 해 둡니다.

       CTRL-KB 기능은 블럭의  시작을  표시하고,  블럭의  끝이  표시되지
       않았다면, 블럭 영역을 표시하는 반전 화면이  아직  나타나  보이지
       않으실 겁니다.

       CTRL-KB 기능은 블럭의 끝을 표시하고, 비로소 블럭 영역이 반전되어
       보입니다. 만약에 블럭 시작을 표시하지 않으시고  블럭  끝을  지정
       하셨다면, 블럭 시작을 처음으로 간주해서 처리합니다.

       **

       산은 1.03 판 부터 MS 계열 에디터의 블럭 지정 방식을  지원합니다.
       SHIFT 글쇠를 누르시고 있는 상태에서 우측  키패드에  있는  글쇠를
       사용하시면 블럭 지정 모드로 바로 들어  가실  수  있습니다.  일단
       지정 모드로 들어 갔으면 쉬프트 키를 누르고 계신 동안에는  커서를
       이동하심에 따라 블럭 영역이 변경되며 쉬프트 키를  놓으시면  블럭
       지정은 끝나게 됩니다. 


       ────────────────────────────────

               CTRL-KH, ALT-U          블럭 이용 가능/불가능

       이 기능은 이미 설정된 블럭의 사용을  불가능하게  만들거나,  사용
       불허된 블럭을 다시 사용 가능하도록 전환하는 역할을 합니다.  일단
       작업이 끝난 블럭을 끄므로서 반전된 화면이 보이지  않게  하실  수
       있습니다.

       ────────────────────────────────

               CTRL-KC                 블럭 복사

       지정된 블럭을 커서 위치로 복사합니다. 문자 단위 블럭의 경우 현재
       행이 분할 되면서 사이에 지정된 블럭이 복사 되어 옵니다. 열  단뒤
       블럭의 경우, 블럭으로 지정된 영역이 밖으로  삐죽이  나온  한글을
       포함할 경우 양쪽 변을  고르게  하기위해,  튀어나오지  않은  행에
       공백을 한 칸씩 넣습니다.  이렇게  정리함으로써  정확한  직사각형
       모양의 블럭이 만들어 집니다. 이 작업은 오른쪽,  왼쪽  변에  대해
       모두 행해 집니다. 이후 먼저 있던 부분은 블럭의 폭만큼 뒤로  밀려
       나고, 블럭이 복사되어 삽입됩니다.

       문자 단위 블럭과  열  단위  블럭은  블럭  자신의  내부로  복사가
       가능합니다. 즉 블럭 지정으로 반전된 영역  내부에  커서가  위치해
       있어도 복사 기능 사용이 가능합니다.

       행 단위 블럭의 경우 블럭으로 지정된 영역이 커서 다음 행부터 삽입
       됩니다.


       ────────────────────────────────

               CTRL-Kn                 n 번째 마당에서 블럭 복사

       K에 뒤따르는 수치는 작업  마당  번호를  의미  하는  것으로  작업
       마당간 자료 이동을  가능하게  합니다.  이  기능은  아래  CTRL-Qn
       기능과 대조 되는 것으로 CTRL-Kn  은  작업  영역  n  에서  자료를
       가져오지만, CTRL-Qn 은 작업 영역 n 으로 자료를 전송 합니다. 기타
       사용법은 블럭 복사와 같습니다.

       ────────────────────────────────

               Ctrl-Qn                 n 번째 마당으로 블럭 보내기

       Q에 뒤따르는 수치는 작업 마당 번호를 의미하는 것으로  현재  작업
       마당에 설정되어 있는 블럭을 지정된 작업 마당의  문서  마지막으로
       전송 합니다.

       ────────────────────────────────

               CTRL-KV                 블럭 이동

       블럭 복사 기능과 같으나 일단  복사가  끝나면  먼저  있던  블럭은
       깨끗이 지워 집니다. 즉, 이동한다고 할 수 있습니다.

       ────────────────────────────────

               CTRL-KY                 블럭 지움 ( 잘라 버림 )

            블럭 지정으로 반전된  부분을  지웁니다.  이때  지워지는
            부분은 '줄 살림 영역'에 저장되고 위에서 설명드린 CTRL-U
            기능으로 살릴 수 있읍니다.

       블럭 지움 기능에는 4 가지가 있습니다. 그  중  이  기능은  지워진
       영역을 잘라 버리기 때문에, 예전에 블럭이 있던 부분을  뒤  따르는
       영역이 메꾸어 줍니다. 다른 형식은 아래에 설명되는 것들로써  일단
       지워진 블럭 영역이 공백으로 남겨져 있게 하실 수도 있습니다.


       ────────────────────────────────

               CTRL-KE                 블럭 지움 ( 지워 버림 )


       블럭을 지정하고 CTRL-KY로 블럭을 지우셨을 경우, 지워진 부분을 뒤
       따르는 부분이 딸려 매꾸게 됩니다. 이 방식은 특히 열 블럭의  경우
       혼란함을 주는 경우가  많은데,  CTRL-KE  기능은  모든  블럭  지정
       방식에서 블럭 영역을 공백으로 지워 줍니다.


       ────────────────────────────────

               CTRL-KX                 선 문자만 남김
               CTRL-KZ                 선 문자만 지움

       서류 양식을 그리시고 작업하시는  경우,  아무리  선  보호  기능이
       있다곤 하지만, 전 항목이 기입된 양식을  다른  내용으로  채우시기
       위해서는 각 항목들을 일일이 지우셔야 할 것입니다.

       블럭 지정 후 CTRL-KX 는 서류 양식만 고스란히 남기고,  그  내용은
       모두 지워 드립니다.

       반대로 CTRL-KZ 는 블럭 내의 선 문자만 골라서 지웁니다.

       ────────────────────────────────

               CTRL-KD                 블럭 테두리

       컬럼 블럭의 경우만 특별히, 블럭으로 지정된 영역 주위에  선문자로
       테두리를 긋는 기능이 있습니다. 컬럼 블럭을 지정 하시고 CtrlKD 를
       누르세요.

       테두리용 문자로는 보통 사용하시는 선 문자 8 묶음과  그림  문자가
       가능합니다. 맨 아래줄에 차림이 조그마하게 나오게 됩니다.

       ────────────────────────────────

               CTRL-KR                 블럭 읽기

       현재 문서에 다른 문서를 읽어 들여와 두 문서를  합합니다.  새로운
       문서는 행단위로 블럭 지정되어 읽혀 져서 커서  다음  행부터  삽입
       되어 집니다.

       ────────────────────────────────

               CTRL-KW                 블럭 쓰기

       반전 된 부분을 띠어서  디스크에  저장합니다.  아래  블럭  인쇄와
       마찬가지로 쓰기나 인쇄나  모두  화면에  반전된  부분에  대해서만
       이루어 집니다. 예로 만약  열단위  블럭을  지정  하셨다면  반전된
       사각형 내부만 디스크에 씌여 지거나 인쇄 됩니다.


       ────────────────────────────────

               CTRL-KA                 블럭 이어 쓰기

       이 이어저장 기능은  블럭  저장  기능과  비슷하게  움직이나  저장
       이름과 같은 문서가 이미 존재할 경우 그것을 지우지 않고  그  뒤에
       이어서 써드립니다.

       ────────────────────────────────

               CTRL-KP                 블럭 인쇄

       설정된 블럭을 인쇄 합니다.

       ────────────────────────────────

               CTRL-KI                 블럭 오른쪽으로 밀기
               CTRL-KU                 블럭 왼쪽으로   당기기

       지금 부터 설명하는 3기능 -- 블럭 좌우 이동과  블럭  정렬  --  은
       블럭이 행 단위로 지정되어 있어야만 사용하실  수  있읍니다.  만약
       문자 단위나 열 단위 블럭으로 설정되어 있는  경우  산이  그  영역
       설정을 참고 해서, 새로 행 블럭을 지정해 드립니다.

       블럭 좌우 이동은 블럭으로 지정된 전 행에 걸쳐서 공백 한칸을 삽입
       하거나 없앰으로서 이루어 지는데,  구조화  프로그래밍을  하실  때
       도움이 되실 겁니다.

       참고로  기능  글쇠를  이용해서  작업  하실  때  여러  열을  밀고
       당기시려면 불편 하실 겁니다. 이 때는 블럭 차림에  있는  'I  밀고
       당김'을 실행 하십쇼. 차림에서의 실행은  연속된  작업을  가능하게
       하므로 수백 행을 눈깜짝 할 사이에 몇 칸씩 좌우로 움직여  줍니다.

       ────────────────────────────────

               CTRL-KL                 블럭 정렬

       블럭에 써있는 내용을 일정 규칙에 의해 재 배열  합니다.  일단  이
       기능을 위해서는 '선택' 차림에서 '블럭 기능'을 선택  하셔서  모든
       정렬 기능에 공통으로 사용될 기준 왼쪽 열,  오른쪽  열과  '교과서
       블럭처럼' 에서만 사용될 들여 쓰기  문자수,  정렬  방식을  설정해
       주셔야 합니다.

       오른쪽으로, 왼쪽으로, 중앙으로는  말  그대로  기준열에  마주어서
       블럭 천체 행을 가지런히 하는 것입니다.

       '교과서  블럭  처럼'은  블럭의  내용을  행의   구분에   관계없이
       조종함으로써,  블럭으로  지정된  부분을  깔끔히  정렬합니다.  이
       정렬을 하시기 전에  반드시  하나의  어절은  같은  행에  존재해야
       합니다. 산은 정렬할 때 한 행이  끝나면  반드시  한  어절이  끝난
       것으로 간주하고, 다음에 오는  어절과의  사이에  공백을  삽입하기
       때문 입니다.

       정렬 방식에서 '문자 단위'가 선택 되어 졌을 때는, 정렬시 기준으로
       설정한 오른쪽 열에 오면 한 어절을 분리하는 한이 있더라도 한 행의
       배열을 끝마칩니다. 나머지 부분은 다음 행에서 부터 배열이  이루어
       집니다. 이 상태에서는 어절 사이의 공백  크기가  일정하므로  보기
       좋은 문서를 얻으실 수 있지만  위에서  말씀드린  것과  마찬가지로
       산이 강제로 한 어절을 분리해서 배열해 버리기 때문에 한 번 정렬된
       블럭을 다시 정렬하게 되면 띄어 쓰기가 틀려집니다.

       이에 반해 '어절 단위' 정렬 방식은 마지막 어절을 지금  배열  중인
       행에 배열할 자리가 없다면 다음  행의  처음부터  배열을  시작하는
       방법입니다. 이때는  한  번  정렬해버린  블럭이라도  강제로  잘린
       어절이 없으므로 다시 정렬이 가능하게 됩니다. 하지만 어절  사이의
       공백의 크기가 행 별로 일관성이 없어 전자에 비해 문서 모양이 약간
       자연스럽지 못합니다.

       '자름 어절' 방식은 '어절 단위'  블럭  정렬과  유사하지만  마지막
       단계에서 자동  어절  띄움  정리를  해드리지  않습니다.  그러므로
       어절간 공백은 1칸씩으로 일정해 지고, 각 행의  끝부분이  달라지게
       됩니다.

       '교과서 문단 처럼' 기능에 영향을 미치는 것이  2가지  더  있는데,
       '들여 쓰기 자수' 와 '줄과 줄사이 빈줄' 입니다.

       들여 쓰기 자수는 블럭 정렬시  블럭의  첫  행에서  문단  처음에서
       들여쓸 자수를 정하는 것으로, 들임만이 가능한 것이  아니고,  지금
       아래 보시는 글에서처럼  문단  번호가  붙은  글의  경우  내쓰기가
       가능합니다. 이 때는 '들여 쓰기 자수' 입력시 음수를  입력  하시면
       됩니다. 음수의 경우 절대값만큼 내 쓰기를 합니다.

    ┌─ 예 ──────────────────────────────┐
    │                                                                  │
    │(1) 만약  이와  같이 문단에 번호가 붙은 글일  경우 과거  버젼에선 │
    │    정렬후 손수 번호를 따로 붙여 주어야 했으나 1.03에서부터 '들여 │
    │    쓰기  자수에  음수가  입력 가능해 져서 블럭의 첫 줄이  앞으로 │
    │    나오도록 할 수 있습니다                                       │
    └─────────────────────────────────┘

       정렬된 문단의 행과 행 사이에  자동으로  공백  행을  삽입할  수도
       있는데, '블럭 정렬' 차림에서 '줄과 줄사이  빈줄'은  정렬시  행과
       행사이의 거리를 지정하게 됩니다.

       '교과서 블럭 처럼' 기능은 설명이 잘 이해 되지 않으실  수도  있을
       겁니다. 아무리 자세히 설명해 드려도 한  번  보시는  것만은  같을
       수가 없겠죠. 직접 블럭을 설정 하셔서 실행에 옮겨 보십쇼.  워드의
       문단 정렬이 부럽지 않으실 겁니다.

       ────────────────────────────────




   7) 검색 치환 기능들 ................................................


       ────────────────────────────────

               CTRL-QF                 단어 검색
               CTRL-QA                 단어 치환
               CTRL-L                  검색/치환 반복

       검색이나 치환 명령을 주시면,  찾기를  원하시는  문자열을  입력해
       주시길 기다립니다. 치환의 경우 또 하나를 묻는데 그것은 일단 찾은
       문자열을 치환하게  될  새로운  문자열입니다.  그리고  마지막으로
       찾기, 치환에  사용되는  몇가지  방법을  설정하는  문자  ..Option
       Character.. 나열을 기다립니다. 보통은 현재 커서 위치에서  검색을
       시작하지만 추가 사항을 표시함으로써 검색 영역과 더불어  몇  가지
       편리한 방법을 사용하실 수 있습니다. 추가  사항  표시에  사용되는
       문자들의  의미는  다음과  같습니다.  아래  설명된  내용은   검색
       명령시에 도움말로 표시 됩니다.


        G    : 현재 커서위치 부터가 아니라 문서 전체에서 검색합니다.
        수치 : 단어가 n 번째 발견된 경우 검색을 중지합니다.
        U    : 영문 검색시 대소 문자를 구별하지 않습니다.
        N    : 치환시 예/아니오를 묻지 않습니다.
        W    : 대상이 검색 문자열로만 이루어진 어절인 경우 중지합니다.
        L    : 블럭 시작 행부터 끝 행까지 검색합니다.
        A    : 발견되는 모든 문자열을 질문없이 치환

       ────────────────────────────────




   8) 덩이 명령 기능들 .....................Macro Commands.............


       산에서는 여러개의 글쇠를 모아 기록해  두었다가  한꺼번에  줄줄이
       실행 시킬 수 있는  기능이  있습니다.  이때  기록  가능한  명령의
       길이는 127자 까지이며 산에서 입력 가능한 어떤 글쇠라도  기록되어
       집니다. 단순한 반복 작업을 하나의 덩이 명령으로 기록해  놓으시고
       사용하시면 아주 편리하실 겁니다.

       ────────────────────────────────

               SHIFT-CTRL-?            덩이 명령 기록
               SHIFT-ALT -?            덩이 명령 실행
               SHIFT-ESC               덩이 기록 취소


       덩이 명령은 모두 26 가지가 -- 'A' 부터 'Z'  까지  --  존재할  수
       있고 한 덩이당 127 자까지가 최대 기억 글쇠 수 입니다.

       덩이 기록은, Ctrl-Shift- [ A 에서 Z 까지중 아무문자  ]  를  입력
       하시면 삑 소리와 함께 시작됩니다. 화면상에는 아무 변화도 없지만,
       이 때부터 입력하시는 모든 글쇠 상황이 기록됩니다. 127 자를  모두
       입력 하셨거나 입력  도중  다시  Ctrl-Shift-?  를  누르시면  글쇠
       기록이 중지 됩니다.

       기록된  덩이  명령의  실행은  SHIFT-ALT-?  를  누르시면  됩니다.
       그러면, 순식간에 글쇠순으로 좍....


       덩이 기록시 쉬프트 글쇠의 상태를 갖이 기록하므로 기록중에  한/영
       전환을 하신다던지 하셔도 전혀 문제가 없습니다. 그리고 덩이  기록
       시작시 그 때의 한/영 상태를 기록해  두므로  일단  기록된  덩이가
       실행될 때, 현재의 한/영 상태에 상관없이 제데로된  문자열이  출력
       됩니다. 추가로, 기록된 덩이 명령이 있는데 실수로  재기록을  시작
       하셨을 때는 Shift-ESC 글쇠를 누르시면 기록 시작을 취소  하실  수
       있습니다. 단  기록  시작을  하신후  아무  글쇠도  누르지  않으신
       상태여야 합니다.




   9) 특수 작업 기능들 ................................................


       ────────────────────────────────

               CTRL-I , TAB            윗줄 모양 따라가기

       현재 커서의 열보다 더 큰 길이를 가진 행을 위로 찾아  갑니다.  더
       긴 행이 발견되면 그 행의 띄어  쓰기에  맞추어  커서를  이동하고,
       '삽입 모드'가 켜져 있을때는 이동한 만큼 공백을 삽입합니다.  만약
       길이가 더 큰  행이  발견되지  않았고  현행이  공백행이  아니라면
       커서위치는 변하지 않지만  공백  행이라면  커서는  윗  행의  시작
       문자와 같은 열에 위치 됩니다.

       ────────────────────────────────

               CTRL-QL                 현재 행을 원래 데로

       처음 현재 행으로 이동해 올때 행의 내용으로 복구합니다.

       ────────────────────────────────

               F6                     왼쪽으로   정렬
               F7                     중앙으로   정렬
               F8                     오른쪽으로 정렬

       현재  행을  기준  열에  맞추어  정렬  합니다.  기준열의   변경은
       '선택'차림 '블럭 기능'에서 가능합니다.




┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃５   그 밖에                                                                ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

    1) 산 바탕 깔개의 사용법 ................SANSETUP...................

       산을 초기 기동하기 위해서는 몇 가지 준비 사항이 필요합니다. 일단
       산이 사용할 화면 출력 드라이버  화일  (SANVIDEO.DRV)  을  만들어
       주셔야 합니다. IBM PC 에서는 여러 종류의 비디오 카드를  사용하기
       때문에 각 비디오 카드에 따라 사용되는  드라이버도  달라  집니다.
       현재, 산은 보통 흑백  모니터와  함께  사용되는  허큘레스  카드와
       대부분의 칼라 모니터 사용자들이 사용하고  계신  브가(VGA)  카드,
       에가(EGA) 카드, 그리고 CGA 카드,  이  네  종류의  비디오  카드를
       지원하고 있습니다.

       그리고, 비디오 드라이버 준비와 함께 산의 환경을 저장하게 될 환경
       저장 화일 (SAN.CNF) 을 만들어 주셔야 합니다.

       위의 준비 작업을 돕기 위해 공급되는  화일이  SANSETUP.EXE  (바탕
       깔개)  입니다.  맨  처음  바탕  깔개  프로그램을  실행  시키시면
       사용하고 계신 비디오 카드에 대한 질문이  나올  것입니다.  여기서
       사용하고 계신 시스템에 맞게 설정을 해주십쇼. 이 차림에서  보이는
       'USER Driver'는 추후 제가 드라이버  화일만을  따로  공급하게  될
       때를  위한  것으로  이  항목을  선택  하시면  직접  드라이버명을
       입력하셔야 합니다.

       예로 [VGA640.DRV for VGA 80*25] 항목을 선택  하시는  것과  'USER
       Driver' 항목을 선택하시고 'VGA640.DRV' 라고 입력하시는 것은 같은
       효과가 있습니다. 화면 출력  드라이버  화일을  바르게  정하셨다면
       다음과 같은 질문을 받게 되실 겁니다.

       " 지정하신 드라이버를 실행 드라이버로 등록 할까요? "

       이 질문은 산의  중심  프로그램의  기동시  사용되는  SANVIDEO.DRV
       화일을 작성할 것인지를 묻는 것으로  처음  실행  하시는  것이라면
       '예'로  답해  주십쇼.  '예'로  답하셨다면  바탕깔개는  바로   앞
       단계에서 지정해 주신 드라이버를 SANVIDEO.DRV 로 복사할 것입니다.
       이  과정은  도스  상에서  COPY  명령으로   해당하는   드라이버를
       SANVIDEO.DRV 로 복사하는 것과 같은 것입니다.  작업이  문제  없이
       끝이  났다면  다음과  같은  말이   출력될   겁니다.   '아니오'로
       답하셨다면 이 과정은 생략 됩니다.

       " 화면 출력 드라이버인 'SANVIDEO.DRV' 가 새로 만들어 졌습니다."

       이제 실제  환경을  변경하실  차림표가  나옵니다.  이곳에  보이는
       대부분의 항목은 산 실행 화일의 '선택'  차림에  똑같이  나옵니다.
       그리고, 산의 기능중 새로 추가된 여러가지  사항에  대해서는  바땅
       깔개에서 지정이 불가능한 것들도  많습니다.  이런  것들은  '산'의
       선택 차림에서 조종이 가능 하십니다. 바타  깔개는  기본적인  선택
       기능만을 제공 합니다. 단, 바탕  깔개에서만  지정이  가능한  것이
       있는데 '문서 크기'란 항목입니다.

       산에서는 한 번에 3개의 문서를 읽어 들여  작업하실  수  있습니다.
       산에서는 문서를 읽어 들이는 곳을 '작업 마당'이란 표현을  씁니다.
       즉 3개의 작업 마당이 존재 하는데 각 작업  마당에는  최대한  읽어
       들일 수 있는 문서의 줄 수에 대한 제한이  있습니다.  즉  최대  줄
       수가 5000으로 지정된 작업 마당에는  5000줄  이상의  문서를  읽어
       들임이 불가능 합니다.

       제작자로서 추천하는 줄 수는 각 작업 마당 별로 5000,  2000,  1000
       정도 입니다. 사용자에 따라 다르시겠지만 첫 번째 작업 마당은 다른
       두 작업 마당에 비해  이용률이  높으실  겁니다.  그래서  이  작업
       마당의 경우 최대 줄 수를 높게 잡으시고 나머지 두 개의 경우  최대
       줄수를 적게 잡으셔서 보조적으로 사용하시길 권합니다.

       최대 작업 마당의 크기는 너무  작을  경우  문서를  모두  못  읽어
       들이는 경우가 있고 너무 클 경우도 작업  마당의  준비에  사용되는
       메모리 양이 너무 많아져 실제 문서를 읽어 들일 때  메모리  부족이
       생깁니다. 좀 전문적인 얘기가 되겠지만 마당의 크기를  1줄  늘일때
       마다 마당의 준비에 사용되는 메모리가 4바이트씩 늘어 나게 됩니다.

       사용자 안내서에 이런 글을 써서  어떨진  모르지만  궁금해  하시는
       분들이 계서서 설명 드립니다. 솔직히 말씀  드려서  이런  번거로운
       작업이 필요한 이유는 초기 설계때 자료 구조를 제데로 만들지  못한
       점에 있습니다. 저 자신도  문제점을  인식하고  있지만  집의  기초
       공사에 해당하는 자료 구조를 다시  설계한다면  나머지  또한  모두
       다시 만들어 져야 합니다. 현재 개인적인 사정상 새로운  프로그램을
       설계한다는 것은 약간의  문제가  있어서  손을  못대고  있는  상황
       입니다.

       선택 사항들에 대한 변경이 끝났으면 '환경 저장'을 선택해  주십쇼.
       환경 저장은 'SAN.CNF'를 생성해서  위의  과정에서  정해진  값들을
       저장하게 됩니다. 문제없이 작업이 진행 되었다면 다음과 같은  말이
       출력 됩니다.

       " 환경 저장 화일 'SAN.CNF' 가 새로 만들어 졌습니다."

       이제 산의 실행에 대한 준비가 모두 끝났습니다. '작업 종료'를 선택
       하시면 도스로 나가실 수 있습니다.




    2) 다색 화면 출력 장치의 색 지정법 ......SETCOLOR...................

       각 드라이버의 배경 색과 문자 색을 바꿀수  있게  하는  프로그램이
       별도 화일로 제공됩니다. 이 화일은 VGA640.DRV 와 EGA640.DRV  에만
       작용  하기  때문에  현재  VGA640.DRV를   SANVIDEO.DRV로   만들어
       사용하고 계신 분들은 색의 지정이  끝나신후  SANVIDEO.DRV를  새로
       만들어 주셔야 합니다.




    3) 자형 목록 관리기의 사용법 ............SANFONT....................

       산의 디렉토리에 여러 개의 한글 자형 화일과 -- *.KOR -- 영문 자형
       화일들이 -- *.ENG -- 있는 경우에 이름만 보고 자형을 선택  한다는
       것은 무척 불편한 일이었습니다. 그래서  1.041  부터  자형  목록을
       지원해 드립니다.

       자형 목록에 저장되는 정보는  각각의  자형으로  직접  쓰여진  192
       바이트의 이미지와 각 자형의 화일 이름입니다. 한글 60가지  알파벳
       60가지 까지의 목록이 등록될 수 있습니다. 이 목록의  관리는  자형
       목록 관리기에 의해서  이루어지고  '산'  에서는  단지  이  목록에
       수록된 자형 이미지를 보시고 선택만 하시면 대응되는 자형의 사용이
       가능해 집니다.

       자형 목록 관리기에서는 새로운 자형  이름의  추가와  등록된  자형
       이름의 삭제등이  가능합니다.  사용  글쇠는  시작시  왼쪽  상단에
       표시되고, 하는 기능이 별로 복잡하지 않으므로 쉽게 사용  하실  수
       있으실 겁니다.


    4) 도움말 화일의 작성법 .................SAN.HLP....................


       항상 프로그램의 디자인데 대해서  논란이  많습니다.  솔직히  산의
       화면 표시는 디자인이라는 말을  부치기  힘들  정도로  단순하지만,
       어떤  상태서나  약간씩  개인의  취향이  강하게  작용한다는  것을
       느꼈습니다.

       도움말의 내용에 대해서도 불만을 가지고 계신 분들이 많으신 것  같
       아서 도움말은 따로  분리해  놓았습니다.  1.031  부터는  도움말을
       'SAN.HLP' 라는 화일에서 읽어 들입니다. 그러므로, 사용자가 취향에
       맞게  오려  붙기고  쓰고  하십쇼.  도움말  화일은  200줄  제한이
       있습니다. 현재 운영하는 도움말의 길이가 60여줄 되므로  200줄이면
       충분 할 것 같습니다. 그리고 80열을 벋어 나는 행은 80열  뒷부분의
       표시가 곤란 합니다. 산이 읽어 들일 때 뒷 부분은 자르게 됩니다.



┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃６   나가는 말                                                              ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛


       어떻셨는지요? 일단  충분한  내용은  아니지만  어느  정도  설명이
       되었다고 봅니다. 위에 설명드린 내용은 대부분 [F1] 도움말  기능에
       요약되어  있씁니다.  실행시  종종  참고하십쇼.  나름대로  노력은
       했습니다만, 프로그램을 만든 사람이 직접 안내서를 쓰다보니,  제가
       아는 너무 당연한 기능들을 풀어 쓰느라  좀  어색한  부분도  많고,
       이상하게도 사용자 입장에  서지  못하고  어떤  프로그램의  플로우
       차트를 해설 하는 듯한 설명이 된  것  같습니다.  산을  사용하시는
       시간이 즐거우시길 바라겠습니다.

